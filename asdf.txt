
build/boot/bootloader.elf:	file format elf32-i386
architecture: i386
start address: 0x00007c00

Program Header:
    LOAD off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000074 memsz 0x00000801 flags rw-
    LOAD off    0x00000c00 vaddr 0x00007c00 paddr 0x00007c00 align 2**12
         filesz 0x00000aad memsz 0x00000aad flags rwx

Dynamic Section:

Sections:
Idx Name            Size     VMA      Type
  0                 00000000 00000000 
  1 .bss            00000001 00000800 BSS
  2 .text           00000a66 00007c00 TEXT
  3 .data           00000034 00008668 DATA
  4 .rodata         00000011 0000869c DATA
  5 .debug_line     00000834 00000000 DEBUG
  6 .debug_info     00000d53 00000000 DEBUG
  7 .debug_abbrev   00000729 00000000 DEBUG
  8 .debug_aranges  00000198 00000000 DEBUG
  9 .debug_str      00000477 00000000 DEBUG
 10 .debug_line_str 000004ad 00000000 DEBUG
 11 .comment        00000012 00000000 
 12 .debug_frame    00000230 00000000 DEBUG
 13 .symtab         00000410 00000000 
 14 .strtab         00000345 00000000 
 15 .shstrtab       0000009a 00000000 

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 flopboot.S.obj
0000aa55 l       *ABS*	00000000 MAGIC
00007c02 l       .text	00000000 start1
00007c0d l       .text	00000000 .read_disk
00007e0e l       .text	00000000 start2
00007c20 l       .text	00000000 .print_error
00007c32 l       .text	00000000 str_diskerror
00007c27 l       .text	00000000 .print_error.1
00007c30 l       .text	00000000 .print_error.2
00007e00 l       .text	00000000 print_string
00007e04 l       .text	00000000 print_string.1
00007e0d l       .text	00000000 print_string.2
00007e12 l       .text	00000000 .activate_a20
00007e22 l       .text	00000000 start2.1
00007e2d l       .text	00000000 str_a20error
00007e1f l       .text	00000000 .activate_a20.halt
00007e2a l       .text	00000000 .halt
00000000 l    df *ABS*	00000000 bootinfo.c
00000000 l    df *ABS*	00000000 disk.c
00000000 l    df *ABS*	00000000 init.c
00008050 l     F .text	00000046 print_hex_byte
0000869c l     O .rodata	00000011 hex_chars.0
00008096 l     F .text	00000070 print_hex_dword
00000000 l    df *ABS*	00000000 keyboard.c
00000000 l    df *ABS*	00000000 video.c
00000000 l    df *ABS*	00000000 cfgspace.c
00000000 l    df *ABS*	00000000 cpu_mode.S.obj
00007bfc l       *ABS*	00000000 REAL_STACK_INIT
00003ffc l       *ABS*	00000000 PROT_STACK_INIT
00000008 l       *ABS*	00000000 PROT_CODE_SEG
00000010 l       *ABS*	00000000 PROT_DATA_SEG
00000018 l       *ABS*	00000000 PROT16_CODE_SEG
00000020 l       *ABS*	00000000 PROT16_DATA_SEG
0000866e l       .data	00000000 gdtr
00008515 l       .text	00000000 .pmode
0000866a l       .data	00000000 prot_stack
0000856d l       .text	00000000 .pmode16
00008589 l       .text	00000000 .rmode
00008674 l       .data	00000000 gdt
00000000 l    df *ABS*	00000000 idt.c
00000000 l    df *ABS*	00000000 main.c
000085ca g       .text	00000000 _i686_in16
000085df g     F .text	00000065 _i686_idt_set_entry
000082f0 g     F .text	00000078 _pc_bios_read_keyboard_nowait
000083b0 g     F .text	00000052 _pc_bios_tty_output
00008402 g     F .text	0000007c _pc_pci_cfg_read
00000800 g     O .bss	00000001 _pc_boot_drive
000085d5 g       .text	00000000 _i686_in32
00008597 g       .text	00000000 _i686_out8
000084fc g       .text	00000000 switch_real_to_prot
00008546 g       .text	00000000 switch_prot_to_real
00008368 g     F .text	00000048 _pc_bios_read_keyboard_flags
00007c00 g       .text	00000000 _start
000085b3 g       .text	00000000 _i686_out32
00007f9c g     F .text	000000b4 _pc_bios_read_drive_chs
00008660 g     F .text	00000006 main
00008106 g     F .text	00000185 _pc_init
0000847e g     F .text	0000007e _pc_pci_cfg_write
00008644 g       .text	00000000 _i686_idt_load
000085c0 g       .text	00000000 _i686_in8
000085a4 g       .text	00000000 _i686_out16
00007f3d g     F .text	0000005f _pc_bios_reset_drive
0000828b g     F .text	00000065 _pc_bios_read_keyboard
00007e4a g       .text	00000000 _pc_bios_call
Contents of section .bss:
<skipping contents of bss section at [0800, 0801)>
Contents of section .text:
 7c00 eb0031c0 8ed88ec0 8ed0bc00 7cb402b0  ..1.........|...
 7c10 11b500b1 02b600bb 007ecd13 0f83ee01  .........~......
 7c20 b40ebe32 7c31dbac 08c07404 cd10ebf7  ...2|1....t.....
 7c30 ebdb4572 726f7220 72656164 696e6720  ..Error reading 
 7c40 6469736b 2e205265 74727969 6e672e2e  disk. Retrying..
 7c50 2e0d0a00 00000000 00000000 00000000  ................
 7c60 00000000 00000000 00000000 00000000  ................
 7c70 00000000 00000000 00000000 00000000  ................
 7c80 00000000 00000000 00000000 00000000  ................
 7c90 00000000 00000000 00000000 00000000  ................
 7ca0 00000000 00000000 00000000 00000000  ................
 7cb0 00000000 00000000 00000000 00000000  ................
 7cc0 00000000 00000000 00000000 00000000  ................
 7cd0 00000000 00000000 00000000 00000000  ................
 7ce0 00000000 00000000 00000000 00000000  ................
 7cf0 00000000 00000000 00000000 00000000  ................
 7d00 00000000 00000000 00000000 00000000  ................
 7d10 00000000 00000000 00000000 00000000  ................
 7d20 00000000 00000000 00000000 00000000  ................
 7d30 00000000 00000000 00000000 00000000  ................
 7d40 00000000 00000000 00000000 00000000  ................
 7d50 00000000 00000000 00000000 00000000  ................
 7d60 00000000 00000000 00000000 00000000  ................
 7d70 00000000 00000000 00000000 00000000  ................
 7d80 00000000 00000000 00000000 00000000  ................
 7d90 00000000 00000000 00000000 00000000  ................
 7da0 00000000 00000000 00000000 00000000  ................
 7db0 00000000 00000000 00000000 00000000  ................
 7dc0 00000000 00000000 00000000 00000000  ................
 7dd0 00000000 00000000 00000000 00000000  ................
 7de0 00000000 00000000 00000000 00000000  ................
 7df0 00000000 00000000 00000000 000055aa  ..............U.
 7e00 b40e31db ac08c074 04cd10eb f7c38816  ..1....t........
 7e10 0008b801 24cd1573 09be2d7e e8e1fff4  ....$..s..-~....
 7e20 ebfde8d7 06e8dc02 0000f4eb fd457272  .............Err
 7e30 6f722061 63746976 6174696e 67204132  or activating A2
 7e40 30206c69 6e652e0d 0a005589 e5505152  0 line....U..PQR
 7e50 5356578a 4508a2db 7e00008b 550c5566  SVW.E...~...U.Uf
 7e60 8b0266a3 d87e0000 668b4204 66a3b57e  ..f..~..f.B.f..~
 7e70 0000668b 420866a3 ba7e0000 668b420c  ..f.B.f..~..f.B.
 7e80 66a3bf7e 0000668b 421066a3 c47e0000  f..~..f.B.f..~..
 7e90 668b4214 66a3c97e 0000668b 421c66a3  f.B.f..~..f.B.f.
 7ea0 ce7e0000 668b4220 66a3d37e 0000e893  .~..f.B f..~....
 7eb0 060000fb b8000089 c3b80000 89c1b800  ................
 7ec0 0089c2b8 000089c6 b8000089 c7b80000  ................
 7ed0 8ec0b800 008ed8b8 0000cd00 a3d87e89  ..............~.
 7ee0 1eb57e89 0eba7e89 16bf7e89 36c47e89  ..~...~...~.6.~.
 7ef0 3ec97ee8 06065d8b 550c66a1 d87e0000  >.~...].U.f..~..
 7f00 66890266 a1b57e00 00668942 0466a1ba  f..f..~..f.B.f..
 7f10 7e000066 89420866 a1bf7e00 00668942  ~..f.B.f..~..f.B
 7f20 0c66a1c4 7e000066 89421066 a1c97e00  .f..~..f.B.f..~.
 7f30 00668942 145f5e5b 5a59585d c35589e5  .f.B._^[ZYX].U..
 7f40 83ec488b 45088845 d4ba0000 0000b820  ..H.E..E....... 
 7f50 00000083 e0f889c1 b8000000 00895405  ..............T.
 7f60 d8895405 dc83c008 39c872f1 0fb645d4  ..T.....9.r...E.
 7f70 8845e48d 45d88944 2404c704 24130000  .E..E..D$...$...
 7f80 00e8c4fe ffff85c0 74090fb6 45d90fb6  ........t...E...
 7f90 c0eb05b8 00000000 89ec5dc3 5589e583  ..........].U...
 7fa0 ec488b45 088b5518 8845d488 d08845d0  .H.E..U..E....E.
 7fb0 ba000000 00b82000 000083e0 f889c1b8  ...... .........
 7fc0 00000000 895405d8 895405dc 83c00839  .....T...T.....9
 7fd0 c872f10f b645d088 45d8c645 d9028b45  .r...E..E..E...E
 7fe0 1c0fb7c0 83e00f0f b7c06689 45dc8b45  ..........f.E..E
 7ff0 0cc1f808 c0e00688 c28b4514 243f08d0  ..........E.$?..
 8000 8845e08b 450c8845 e10fb645 d48845e4  .E..E..E...E..E.
 8010 8b451088 45e58b45 1cc1e804 0fb7c066  .E..E..E.......f
 8020 8945f48d 45d88944 2404c704 24130000  .E..E..D$...$...
 8030 00e814fe ffff85c0 740b0fb6 45d90fb6  ........t...E...
 8040 c0f7d8eb 070fb645 d80fb6c0 89ec5dc3  .......E......].
 8050 5589e583 ec288b45 088845f4 0fb645f4  U....(.E..E...E.
 8060 c0e8040f b6c00fb6 809c8600 000fb6c0  ................
 8070 890424e8 38030000 0fb645f4 83e00f0f  ..$.8.....E.....
 8080 b6809c86 00000fb6 c0890424 e81f0300  ...........$....
 8090 009089ec 5dc35589 e583ec18 8b4508c1  ....].U......E..
 80a0 e8180fb6 c0890424 e8a3ffff ffc70424  .......$.......$
 80b0 20000000 e8f70200 008b4508 c1e8100f   .........E.....
 80c0 b6c08904 24e886ff ffffc704 24200000  ....$.......$ ..
 80d0 00e8da02 00008b45 08c1e808 0fb6c089  .......E........
 80e0 0424e869 ffffffc7 04242000 0000e8bd  .$.i.....$ .....
 80f0 0200008b 45080fb6 c0890424 e84fffff  ....E......$.O..
 8100 ff9089ec 5dc35589 e583ec68 895dfcc7  ....].U....h.]..
 8110 45d04865 6c6cc745 d46f2c20 57c745d8  E.Hell.E.o, W.E.
 8120 6f726c64 c745dc21 0d0a00c7 45f40000  orld.E.!....E...
 8130 0000eb19 8d55d08b 45f401d0 0fb6000f  .....U..E.......
 8140 b6c08904 24e86602 0000ff45 f48d55d0  ....$.f....E..U.
 8150 8b45f401 d00fb600 84c075d8 c745c400  .E........u..E..
 8160 000000c7 45c80000 0000c745 cc010000  ....E......E....
 8170 000fb605 00080000 0fb6c0c7 44241400  ............D$..
 8180 000100c7 44241012 0000008b 55c48954  ....D$......U..T
 8190 24048b55 c8895424 088b55cc 8954240c  $..U..T$..U..T$.
 81a0 890424e8 f4fdffff c745f000 000000e9  ..$......E......
 81b0 92000000 c745ec00 000000eb 7cc745e8  .....E......|.E.
 81c0 00000000 eb6ac745 e4000000 00eb498b  .....j.E......I.
 81d0 45e40fb6 d88b45e8 0fb6c88b 45ec0fb6  E.....E.....E...
 81e0 d08b45f0 0fb6c089 5c240c89 4c240889  ..E.....\$..L$..
 81f0 54240489 0424e807 02000089 45e08b45  T$...$......E..E
 8200 e0890424 e88dfeff ffc70424 0a000000  ...$.......$....
 8210 e89b0100 00ff45e4 817de4ff 0000007e  ......E..}.....~
 8220 aec70424 0a000000 e8830100 00ff45e8  ...$..........E.
 8230 837de807 7e90ff45 ec837dec 1f0f8e7a  .}..~..E..}....z
 8240 ffffffff 45f0817d f0ff0000 000f8e61  ....E..}.......a
 8250 ffffff8d 45c38944 2404c704 24000000  ....E..D$...$...
 8260 00e82500 00000fb6 45c33c0d 750cc704  ..%.....E.<.u...
 8270 240a0000 00e83601 00000fb6 45c30fb6  $.....6.....E...
 8280 c0890424 e8270100 00ebc855 89e583ec  ...$.'.....U....
 8290 38ba0000 0000b820 00000083 e0f889c1  8...... ........
 82a0 b8000000 00895405 d8895405 dc83c008  ......T...T.....
 82b0 39c872f1 c645d910 8d45d889 442404c7  9.r..E...E..D$..
 82c0 04241600 0000e87f fbffff83 7d080074  .$..........}..t
 82d0 090fb655 d98b4508 8810837d 0c00740b  ...U..E....}..t.
 82e0 0fb645d8 88c28b45 0c881090 89ec5dc3  ..E....E......].
 82f0 5589e583 ec38ba00 000000b8 20000000  U....8...... ...
 8300 83e0f889 c1b80000 00008954 05d88954  ...........T...T
 8310 05dc83c0 0839c872 f1c645d9 118d45d8  .....9.r..E...E.
 8320 89442404 c7042416 000000e8 1afbffff  .D$...$.........
 8330 0fb745d8 85c07507 b8010000 00eb2583  ..E...u.......%.
 8340 7d080074 090fb655 d98b4508 8810837d  }..t...U..E....}
 8350 0c00740b 0fb645d8 88c28b45 0c8810b8  ..t...E....E....
 8360 00000000 89ec5dc3 5589e583 ec38ba00  ......].U....8..
 8370 000000b8 20000000 83e0f889 c1b80000  .... ...........
 8380 00008954 05d88954 05dc83c0 0839c872  ...T...T.....9.r
 8390 f1c645d9 128d45d8 89442404 c7042416  ..E...E..D$...$.
 83a0 000000e8 a2faffff 0fb745d8 89ec5dc3  ..........E...].
 83b0 5589e583 ec488b45 088845d4 ba000000  U....H.E..E.....
 83c0 00b82000 000083e0 f889c1b8 00000000  .. .............
 83d0 895405d8 895405dc 83c00839 c872f10f  .T...T.....9.r..
 83e0 b645d488 45d8c645 d90e8d45 d8894424  .E..E..E...E..D$
 83f0 04c70424 10000000 e84dfaff ff9089ec  ...$.....M......
 8400 5dc35589 e583ec38 895dfc8b 45088b5d  ].U....8.]..E..]
 8410 0c8b4d10 8b551488 45e488d8 8845e088  ..M..U..E....E..
 8420 c88845dc 88d08845 d80fb645 e4c1e010  ..E....E...E....
 8430 89c20fb6 45e0c1e0 0b09c20f b645dcc1  ....E........E..
 8440 e00809c2 0fb645d8 09d00d00 00008089  ......E.........
 8450 45f48b45 f4894424 04c70424 f80c0000  E..E..D$...$....
 8460 e84e0100 00c70424 fc0c0000 e8640100  .N.....$.....d..
 8470 008945f0 8b45f08b 5dfc89ec 5dc35589  ..E..E..]...].U.
 8480 e583ec38 895dfc8b 45088b5d 0c8b4d10  ...8.]..E..]..M.
 8490 8b551488 45e488d8 8845e088 c88845dc  .U..E....E....E.
 84a0 88d08845 d80fb645 e4c1e010 89c20fb6  ...E...E........
 84b0 45e0c1e0 0b09c20f b645dcc1 e00809c2  E........E......
 84c0 0fb645d8 09d00d00 00008089 45f48b45  ..E.........E..E
 84d0 f4894424 04c70424 f80c0000 e8d20000  ..D$...$........
 84e0 008b4518 89442404 c70424fc 0c0000e8  ..E..D$...$.....
 84f0 bf000000 908b5dfc 89ec5dc3 fa31c08e  ......]...]..1..
 8500 d80f0116 6e860f20 c06683c8 010f22c0  ....n.. .f....".
 8510 ea158508 0066b810 008ed88e c08ee08e  .....f..........
 8520 e88ed031 c0668b04 2466a3fc 7b0000a1  ...1.f..$f..{...
 8530 6a860000 89c489c5 31c066a1 fc7b0000  j.......1.f..{..
 8540 89042431 c0c3fa0f 01156e86 000089e0  ..$1......n.....
 8550 a36a8600 008b0424 a3fc7b00 00b8fc7b  .j.....$..{....{
 8560 000089c4 89c5ea6d 85000018 00b82000  .......m...... .
 8570 8ed88ec0 8ee08ee8 8ed00f20 c06683e0  ........... .f..
 8580 fe0f22c0 ea898500 006631c0 8ed88ec0  .."......f1.....
 8590 8ee08ee8 8ed0c355 89e58a45 08668b55  .......U...E.f.U
 85a0 0cee5dc3 5589e566 8b450866 8b550c66  ..].U..f.E.f.U.f
 85b0 ef5dc355 89e58b45 08668b55 0cef5dc3  .].U...E.f.U..].
 85c0 5589e566 8b5508ec 5dc35589 e5668b55  U..f.U..].U..f.U
 85d0 0866ed5d c35589e5 668b5508 ed5dc355  .f.].U..f.U..].U
 85e0 89e583ec 188b4510 8b551466 8945ec89  ......E..U.f.E..
 85f0 d0668945 e88b450c 8945fc8b 45fc0fb7  .f.E..E..E..E...
 8600 d08b4508 6689108b 45088b55 ec668950  ..E.f...E..U.f.P
 8610 028b4508 8b55e866 8950048b 45fcc1e8  ..E..U.f.P..E...
 8620 100fb7d0 8b450866 8950068b 4508c740  .....E.f.P..E..@
 8630 08000000 008b4508 c7400c00 00000090  ......E..@......
 8640 89ec5dc3 5589e556 578b7508 668b7d0c  ..].U..VW.u.f.}.
 8650 664f31c0 50566657 0f011c24 5f5e5dc3  fO1.PVfW...$_^].
 8660 5589e590 5dc3                        U...].
Contents of section .data:
 8668 0000fc3f 00002700 74860000 00000000  ...?..'.t.......
 8678 00000000 ffff0000 009acf00 ffff0000  ................
 8688 0092cf00 ffff0000 009a0000 ffff0000  ................
 8698 00920000                             ....
Contents of section .rodata:
 869c 30313233 34353637 38394142 43444546  0123456789ABCDEF
 86ac 00                                   .
Contents of section .debug_line:
 0000 b9000000 02006300 00000101 fb0e0a00  ......c.........
 0010 01010101 00000001 2f557365 72732f67  ......../Users/g
 0020 776f6e6d 696e7375 2f446f63 756d656e  wonminsu/Documen
 0030 74732f4c 6f63616c 50726f6a 65637473  ts/LocalProjects
 0040 2f656d6f 732f626f 6f742f61 7263682f  /emos/boot/arch/
 0050 69363836 2f70632f 62696f73 00006269  i686/pc/bios..bi
 0060 6f736361 6c6c2e53 00010000 00000502  oscall.S........
 0070 4a7e0000 151e2d1e 1e1e1e1e 1f3a563b  J~....-......:V;
 0080 1f3a6448 64486448 64486448 64486448  .:dHdHdHdHdHdHdH
 0090 65574c5a 5a5a5a5a 5a030a71 3a484848  eWLZZZZZZ..q:HHH
 00a0 48493c1f 3b643a64 48644864 48644864  HI<.;d:dHdHdHdHd
 00b0 4c1e1e1e 1e1e1f1f 02010001 013f0000  L............?..
 00c0 00050004 00370000 00010101 fb0e0d00  .....7..........
 00d0 01010101 00000001 00000101 011f0300  ................
 00e0 00000084 000000c4 00000002 011f020f  ................
 00f0 03790000 00010d01 00000279 00000001  .y.........y....
 0100 f1000000 05000400 45000000 010101fb  ........E.......
 0110 0e0d0001 01010100 00000100 00010101  ................
 0120 1f040000 00006601 0000c400 0000ab01  ......f.........
 0130 00000201 1f020f05 5f010000 015f0100  ........_...._..
 0140 00010d01 000002e5 01000003 ec010000  ................
 0150 01050100 05023d7f 00000311 01051abb  ......=.........
 0160 050c022a 16053400 02040108 2e053100  ...*..4.......1.
 0170 0204014a 05340002 04014a06 3c000204  ...J.4....J.<...
 0180 022e0501 06594d05 1a083d05 1e022e1a  .....YM...=.....
 0190 051a0378 ba05184e 05223c05 353c053b  ...x...N."<.5<.;
 01a0 5805433c 05352e05 1a2a0515 3f051a39  X.C<.5...*..?..9
 01b0 0515a305 1a370512 4305203c 051a0379  .....7..C. <...y
 01c0 3c050c03 0a740537 00020401 082e0533  <....t.7.......3
 01d0 00020401 4a053700 02040174 062e0541  ....J.7....t...A
 01e0 00020402 062e0537 00020402 4a05013d  .......7....J..=
 01f0 02040001 01a00000 0002005e 00000001  ...........^....
 0200 01fb0e0a 00010101 01000000 012f5573  ............./Us
 0210 6572732f 67776f6e 6d696e73 752f446f  ers/gwonminsu/Do
 0220 63756d65 6e74732f 4c6f6361 6c50726f  cuments/LocalPro
 0230 6a656374 732f656d 6f732f62 6f6f742f  jects/emos/boot/
 0240 61726368 2f693638 362f7063 0000666c  arch/i686/pc..fl
 0250 6f70626f 6f742e53 00010000 00000502  opboot.S........
 0260 007c0000 172e2c2c 2c2c3c2c 2c2c2c2d  .|....,,,,<,,,,-
 0270 3a2d4a2c 3a2e1e2c 2d2c2e03 0a02d003  :-J,:..,-,......
 0280 012c2e1e 2c2d2c2e 204a3a2c 2d3a3b1e  .,..,-,. J:,-:;.
 0290 2f3b591e 021f0001 014b0100 00050004  /;Y......K......
 02a0 00610000 00010101 fb0e0d00 01010101  .a..............
 02b0 00000001 00000101 011f0600 00000084  ................
 02c0 000000c4 000000ab 0100003e 02000066  ...........>...f
 02d0 01000002 011f020f 09370200 00013702  .........7....7.
 02e0 0000010d 01000002 e5010000 03820200  ................
 02f0 0004e501 0000058d 02000005 98020000  ................
 0300 05a00200 00010501 00050250 80000003  ...........P....
 0310 13010529 bc05229e 05057405 29ad0522  ...).."...t.).."
 0320 74050574 0501ad5b 051a6705 0566ad05  t..t...[..g..f..
 0330 1abb0505 66ad051a bb050566 adbb0501  ....f......f....
 0340 d75c0510 91050e08 ad050574 05202f05  .\.........t. /.
 0350 09ac051e 00020403 ab051800 0204013c  ...............<
 0360 05150002 0401ac05 394e0505 084a050e  ........9N...J..
 0370 02371405 05740512 59050974 05162f05  .7...t..Y..t../.
 0380 0d74051a 2f051174 05262f05 15022f13  .t../..t.&/.../.
 0390 ad053a00 020403b7 052d0002 04013c05  ..:......-....<.
 03a0 1195053a 00020402 037aba05 2d000204  ...:.....z..-...
 03b0 013c0531 00020402 65052500 0204013c  .<.1....e.%....<
 03c0 00020402 9d051b00 0204013c 0509030f  ...........<....
 03d0 c8051008 2f050c4a 050d4b05 09bc050e  ..../..J..K.....
 03e0 037ae402 02000101 d3000000 05000400  .z..............
 03f0 3c000000 010101fb 0e0d0001 01010100  <...............
 0400 00000100 00010101 1f030000 00006601  ..............f.
 0410 0000c400 00000201 1f020f04 f0020000  ................
 0420 01f00200 00010d01 000002ec 01000001  ................
 0430 05010005 028b8200 0017051a 67050502  ............g...
 0440 27160508 08300527 00020401 66051d00  '....0.'....f...
 0450 0204014a 05085905 21000204 01660517  ...J..Y.!....f..
 0460 00020401 66050159 5b051a67 05050227  ....f..Y[..g...'
 0470 16051008 3005084a 051b0002 04014a06  ....0..J......J.
 0480 58050806 30052700 02040166 051d0002  X...0.'....f....
 0490 04014a05 08590521 00020401 66051700  ..J..Y.!....f...
 04a0 02040166 050c5a05 01594d05 1a670505  ...f..Z..YM..g..
 04b0 02271605 12083005 014b0204 0001015f  .'....0..K....._
 04c0 00000005 0004003c 00000001 0101fb0e  .......<........
 04d0 0d000101 01010000 00010000 0101011f  ................
 04e0 03000000 00660100 00c40000 0002011f  .....f..........
 04f0 020f0440 03000001 40030000 010d0100  ...@....@.......
 0500 0002ec01 00000105 01000502 b0830000  ................
 0510 17051abb 0505022e 17050108 2f020500  ............/...
 0520 01019c00 00000500 04004000 00000101  ..........@.....
 0530 01fb0e0d 00010101 01000000 01000001  ................
 0540 01011f04 00000000 3e020000 c4000000  ........>.......
 0550 97030000 02011f02 0f048c03 0000018c  ................
 0560 03000001 0d010000 02e10300 00030501  ................
 0570 00050202 84000017 052b0227 13053c90  .........+.'..<.
 0580 05327405 4f2e0543 7405552e 050e6605  .2t.O..Ct.U...f.
 0590 0585050d 082f050c e605013d 77052b02  ...../.....=w.+.
 05a0 2713053c 90053274 054f2e05 43740555  '..<..2t.O..Ct.U
 05b0 2e050e66 05058408 2f050108 2f020800  ...f..../.../...
 05c0 0101a300 00000200 5b000000 0101fb0e  ........[.......
 05d0 0a000101 01010000 00012f55 73657273  ........../Users
 05e0 2f67776f 6e6d696e 73752f44 6f63756d  /gwonminsu/Docum
 05f0 656e7473 2f4c6f63 616c5072 6f6a6563  ents/LocalProjec
 0600 74732f65 6d6f732f 626f6f74 2f617263  ts/emos/boot/arc
 0610 682f6936 38360000 6370755f 6d6f6465  h/i686..cpu_mode
 0620 2e530001 00000000 0502fc84 0000030e  .S..............
 0630 011f2c2d 573a483b 5b482c2c 2c2c2d2c  ..,-W:H;[H,,,,-,
 0640 4865562c 2d2c643b 2d211e73 2c573a57  HeV,-,d;-!.s,W:W
 0650 562c2d77 3a2c2c2c 2c2d3a48 3b593a2c  V,-w:,,,,-:H;Y:,
 0660 2c2c2c2d 02010001 018e0000 00020055  ,,,-...........U
 0670 00000001 01fb0e0a 00010101 01000000  ................
 0680 012f5573 6572732f 67776f6e 6d696e73  ./Users/gwonmins
 0690 752f446f 63756d65 6e74732f 4c6f6361  u/Documents/Loca
 06a0 6c50726f 6a656374 732f656d 6f732f62  lProjects/emos/b
 06b0 6f6f742f 61726368 2f693638 36000069  oot/arch/i686..i
 06c0 6f2e5300 01000000 00050297 85000014  o.S.............
 06d0 1e2d3a49 1f1f211e 2d48492d 1f211e2d  .-:I..!.-HI-.!.-
 06e0 3a491f1f 211e2d49 1f1f211e 2d492d1f  :I..!.-I..!.-I-.
 06f0 211e2d49 1f1f0201 0001016f 00000005  !.-I.......o....
 0700 0004003c 00000001 0101fb0e 0d000101  ...<............
 0710 01010000 00010000 0101011f 03000000  ................
 0720 00290400 00c40000 0002011f 020f0423  .).............#
 0730 04000001 23040000 010d0100 00026604  ....#.........f.
 0740 00000105 01000502 df850000 17051408  ................
 0750 59051767 051dbb05 179f052c 9f051a66  Y..g.......,...f
 0760 05189f05 169f0501 9f020500 01017800  ..............x.
 0770 00000200 56000000 0101fb0e 0a000101  ....V...........
 0780 01010000 00012f55 73657273 2f67776f  ....../Users/gwo
 0790 6e6d696e 73752f44 6f63756d 656e7473  nminsu/Documents
 07a0 2f4c6f63 616c5072 6f6a6563 74732f65  /LocalProjects/e
 07b0 6d6f732f 626f6f74 2f617263 682f6936  mos/boot/arch/i6
 07c0 38360000 6964742e 53000100 00000005  86..idt.S.......
 07d0 02448600 00141e2d 1e1f3a49 2d2d1e1e  .D.....-..:I--..
 07e0 2d491e1f 1f020100 01014600 00000500  -I........F.....
 07f0 04002e00 00000101 01fb0e0d 00010101  ................
 0800 01000000 01000001 01011f02 00000000  ................
 0810 ab010000 02011f02 0f02a604 000001a6  ................
 0820 04000001 05010005 02608600 00193d02  .........`....=.
 0830 03000101                             ....
Contents of section .debug_info:
 0000 22000000 02000000 00000401 00000000  "...............
 0010 4a7e0000 3d7f0000 00000000 50000000  J~..=.......P...
 0020 89000000 01807f00 00000500 01041400  ................
 0030 000002e1 0000001d 39000000 00000000  ........9.......
 0040 bd000000 010106d5 00000001 02053201  ..............2.
 0050 00000104 059c0000 00010805 97000000  ................
 0060 03cb0000 00012e18 46000000 010108d3  ........F.......
 0070 00000001 02071f01 00000104 07b90000  ................
 0080 00010807 b4000000 04040569 6e740001  ...........int..
 0090 0407be00 000005a5 00000002 03093a00  ..............:.
 00a0 00000503 00080000 00380200 00050001  .........8......
 00b0 045c0000 000be100 00001d1a 01000000  .\..............
 00c0 0000003d 7f000013 01000000 01000002  ...=............
 00d0 0106d500 00000202 05320100 00020405  .........2......
 00e0 9c000000 02080597 00000004 cb000000  ................
 00f0 2e184d00 00000201 08d30000 00049b01  ..M.............
 0100 00003119 5f000000 0202071f 01000004  ..1._...........
 0110 a4010000 34197100 00000204 07b90000  ....4.q.........
 0120 00020807 b4000000 0c040569 6e740002  ...........int..
 0130 0407be00 00000d63 6873000c 030608bc  .......chs......
 0140 00000005 43010000 097f0000 00000555  ....C..........U
 0150 01000013 7f000000 04053c01 0000197f  ..........<.....
 0160 00000008 000e0204 0905da00 0000016c  ...............l
 0170 000a1142 00000000 0168000a 14420000  ...B.....h...B..
 0180 00010007 4c010000 06000100 00036c00  ....L.........l.
 0190 070e6600 00000377 00080e54 00000003  ..f....w...T....
 01a0 62000b07 bc000000 00075a01 00000e26  b.........Z....&
 01b0 01000003 6c000f0e 66000000 03770010  ....l...f....w..
 01c0 0e540000 00036200 110d4200 0000000f  .T....b...B.....
 01d0 79010000 20041408 88010000 01610015  y... ........a..
 01e0 14da0000 00000162 001614da 00000004  .......b........
 01f0 01630017 14da0000 00080164 001814da  .c.........d....
 0200 0000000c 01736900 19150001 00001001  .....si.........
 0210 6469001a 15000100 00140164 73001b15  di.........ds...
 0220 00010000 18016573 001c1500 0100001c  ......es........
 0230 00108701 0000041f 0c7f0000 00a30100  ................
 0240 00084200 000008a3 01000000 11042601  ..B...........&.
 0250 000012ad 01000001 1a057f00 00009c7f  ................
 0260 0000b400 0000019c 07020000 06730100  .............s..
 0270 001a2542 00000002 914c0963 68730037  ..%B.....L.chs.7
 0280 8d000000 02910406 95010000 1a444200  .............DB.
 0290 00000291 48096275 66005107 02000002  ....H.buf.Q.....
 02a0 91140a82 0100001c 26010000 02915000  ........&.....P.
 02b0 13041464 01000001 11057f00 00003d7f  ...d..........=.
 02c0 00005f00 0000019c 06730100 00112242  .._......s...."B
 02d0 00000002 914c0a82 01000013 26010000  .....L......&...
 02e0 02915000 00220000 000200ae 01000004  ..P.."..........
 02f0 01f50100 00007c00 004a7e00 00c50100  ......|..J~.....
 0300 00500000 00890000 000180a0 02000005  .P..............
 0310 000104c2 01000011 e1000000 1df70100  ................
 0320 00000000 00508000 003b0200 00990200  .....P...;......
 0330 00010106 d5000000 01020532 01000001  ...........2....
 0340 04059c00 00000108 05970000 0007cb00  ................
 0350 00002e18 4d000000 010108d3 00000001  ....M...........
 0360 02071f01 000007a4 01000034 19660000  ...........4.f..
 0370 00010407 b9000000 010807b4 00000012  ................
 0380 0405696e 74000104 07be0000 00010c04  ..int...........
 0390 45020000 01100481 02000013 a5000000  E...............
 03a0 08061042 00000014 63687300 0c030608  ...B....chs.....
 03b0 cb000000 06430100 00097400 00000006  .....C....t.....
 03c0 55010000 13740000 0004063c 01000019  U....t.....<....
 03d0 74000000 08000827 02000006 06e10000  t......'........
 03e0 0002e100 000002e6 00000000 09420000  .............B..
 03f0 0009eb00 00000101 06dc0000 000aeb00  ................
 0400 00000b10 02000004 250a5b00 00001c01  ........%.[.....
 0410 00000242 00000002 42000000 02420000  ...B....B....B..
 0420 00024200 0000000b ad010000 05090574  ..B............t
 0430 00000041 01000002 42000000 029c0000  ...A....B.......
 0440 00024200 00000241 01000000 15040851  ..B....A.......Q
 0450 02000007 0f540100 00024200 00000016  .....T....B.....
 0460 6e020000 01260606 81000085 01000001  n....&..........
 0470 9c270200 00057374 72002810 27020000  .'....str.(.'...
 0480 0291480c 2b810000 31000000 92010000  ..H.+...1.......
 0490 05690029 0e740000 0002916c 000ca881  .i.).t.....l....
 04a0 0000ab00 00000e02 00000562 7573002f  ...........bus./
 04b0 0e740000 00029168 03b48100 008f0000  .t.....h........
 04c0 00043e02 00003012 74000000 02916403  ..>...0.t.....d.
 04d0 bd810000 79000000 04650200 00311674  ....y....e...1.t
 04e0 00000002 916003c6 8100005b 00000004  .....`.....[....
 04f0 c5030000 321a7400 00000291 5c03cf81  ....2.t.....\...
 0500 00004600 00000421 02000033 1e5b0000  ..F....!...3.[..
 0510 00029158 00000000 00035382 00003600  ...X......S...6.
 0520 00000563 68003d0e eb000000 0391bb7f  ...ch.=.........
 0530 00000df2 00000037 0200000e 66000000  .......7....f...
 0540 0f000f8b 0200001a 96800000 70000000  ............p...
 0550 019c5a02 00001021 0200001a 265b0000  ..Z....!....&[..
 0560 00029100 000f9b02 00001350 80000046  ...........P...F
 0570 00000001 9c8e0200 00102102 00001324  ..........!....$
 0580 42000000 02916c04 77020000 15179e02  B.....l.w.......
 0590 00000503 9c860000 000df200 00009e02  ................
 05a0 00000e66 00000010 000a8e02 0000002d  ...f...........-
 05b0 02000005 00010414 0300000b e1000000  ................
 05c0 1dab0200 00000000 008b8200 00250100  .............%..
 05d0 00e80300 00010106 d5000000 01020532  ...............2
 05e0 01000001 04059c00 00000108 05970000  ................
 05f0 0005cb00 00002e18 4d000000 010108d3  ........M.......
 0600 00000005 9b010000 31195f00 00000102  ........1._.....
 0610 071f0100 0005a401 00003419 71000000  ..........4.q...
 0620 010407b9 00000001 0807b400 00000c04  ................
 0630 05696e74 00010407 be000000 0d020309  .int............
 0640 05ab0000 00026c00 0a114200 00000002  ......l...B.....
 0650 68000a14 42000000 0100084c 01000006  h...B......L....
 0660 d1000000 036c0007 0e660000 00037700  .....l...f....w.
 0670 080e5400 00000362 000b078d 00000000  ..T....b........
 0680 085a0100 000ef700 0000036c 000f0e66  .Z.........l...f
 0690 00000003 7700100e 54000000 03620011  ....w...T....b..
 06a0 0d420000 00000e79 01000020 03140859  .B.....y... ...Y
 06b0 01000002 61001514 ab000000 00026200  ....a.........b.
 06c0 1614ab00 00000402 63001714 ab000000  ........c.......
 06d0 08026400 1814ab00 00000c02 73690019  ..d.........si..
 06e0 15d10000 00100264 69001a15 d1000000  .......di.......
 06f0 14026473 001b15d1 00000018 02657300  ..ds.........es.
 0700 1c15d100 00001c00 0f870100 00031f0c  ................
 0710 7f000000 74010000 09420000 00097401  ....t....B....t.
 0720 00000006 f7000000 0ad70200 00210a54  .............!.T
 0730 00000068 83000048 00000001 9ca00100  ...h...H........
 0740 00078201 000023f7 00000002 9150000a  ......#......P..
 0750 b3020000 11057f00 0000f082 00007800  ..............x.
 0760 0000019c e3010000 04aa0200 00112ce3  ..............,.
 0770 01000002 910004d1 02000011 3ce80100  ............<...
 0780 00029104 07820100 0013f700 00000291  ................
 0790 50000642 00000006 ed010000 010106dc  P..B............
 07a0 00000010 27020000 0105068b 82000065  ....'..........e
 07b0 00000001 9c04aa02 00000526 e3010000  ...........&....
 07c0 02910004 d1020000 0536e801 00000291  .........6......
 07d0 04078201 000007f7 00000002 91500000  .............P..
 07e0 a7010000 05000104 28040000 07e10000  ........(.......
 07f0 001dfb02 00000000 0000b083 00005200  ..............R.
 0800 0000bf04 00000201 06d50000 00020205  ................
 0810 32010000 0204059c 00000002 08059700  2...............
 0820 000004cb 0000002e 184d0000 00020108  .........M......
 0830 d3000000 049b0100 0031195f 00000002  .........1._....
 0840 02071f01 000004a4 01000034 19710000  ...........4.q..
 0850 00020407 b9000000 020807b4 00000008  ................
 0860 0405696e 74000204 07be0000 00090203  ..int...........
 0870 0905ab00 0000016c 000a1142 00000000  .......l...B....
 0880 0168000a 14420000 00010005 4c010000  .h...B......L...
 0890 06d10000 00036c00 070e6600 00000377  ......l...f....w
 08a0 00080e54 00000003 62000b07 8d000000  ...T....b.......
 08b0 00055a01 00000ef7 00000003 6c000f0e  ..Z.........l...
 08c0 66000000 03770010 0e540000 00036200  f....w...T....b.
 08d0 110d4200 0000000a 79010000 20031408  ..B.....y... ...
 08e0 59010000 01610015 14ab0000 00000162  Y....a.........b
 08f0 001614ab 00000004 01630017 14ab0000  .........c......
 0900 00080164 001814ab 0000000c 01736900  ...d.........si.
 0910 1915d100 00001001 6469001a 15d10000  ........di......
 0920 00140164 73001b15 d1000000 18016573  ...ds.........es
 0930 001c15d1 0000001c 000b8701 0000031f  ................
 0940 0c7f0000 00740100 00064200 00000674  .....t....B....t
 0950 01000000 0c04f700 00000d51 02000001  ...........Q....
 0960 0506b083 00005200 0000019c 0e636800  ......R......ch.
 0970 01052242 00000002 914c0f82 01000001  .."B.....L......
 0980 071af700 00000291 5000008a 01000005  ........P.......
 0990 0001041a 05000007 e1000000 1d480300  .............H..
 09a0 00000000 00028400 00fa0000 00220500  ............."..
 09b0 00010106 d5000000 01020532 01000001  ...........2....
 09c0 04059c00 00000108 05970000 0003cb00  ................
 09d0 00002e18 4d000000 010108d3 00000003  ....M...........
 09e0 9b010000 31195f00 00000102 071f0100  ....1._.........
 09f0 0003a401 00003419 71000000 010407b9  ......4.q.......
 0a00 00000001 0807b400 00000804 05696e74  .............int
 0a10 00010407 be000000 09080300 0003090a  ................
 0a20 66000000 a3000000 04540000 00000af4  f........T......
 0a30 02000003 0506ba00 00000454 00000004  ...........T....
 0a40 66000000 000b1303 00000110 067e8400  f............~..
 0a50 007e0000 00019c24 01000006 62757300  .~.....$....bus.
 0a60 10204200 00000291 5c023e02 0000102d  . B.....\.>....-
 0a70 42000000 02915802 65020000 103d4200  B.....X.e....=B.
 0a80 00000291 5402c503 0000104f 42000000  ....T......OB...
 0a90 02915002 21020000 10606600 00000291  ..P.!....`f.....
 0aa0 10050003 00001266 00000002 916c000c  .......f.....l..
 0ab0 10020000 01050a66 00000002 8400007c  .......f.......|
 0ac0 00000001 9c066275 73000523 42000000  ......bus..#B...
 0ad0 02915c02 3e020000 05304200 00000291  ..\.>....0B.....
 0ae0 58026502 00000540 42000000 02915402  X.e....@B.....T.
 0af0 c5030000 05524200 00000291 50050003  .....RB.....P...
 0b00 00000766 00000002 916c0521 02000008  ...f.....l.!....
 0b10 66000000 02916800 00220000 000200f4  f.....h.."......
 0b20 05000004 01c20500 00fc8400 00978500  ................
 0b30 00250300 00500000 00890000 00018022  .%...P........."
 0b40 00000002 00080600 00040169 06000097  ...........i....
 0b50 850000df 8500006d 03000050 00000089  .......m...P....
 0b60 00000001 80370100 00050001 041c0600  .....7..........
 0b70 0006e100 00001de6 03000000 000000df  ................
 0b80 85000065 000000fb 06000001 0106d500  ...e............
 0b90 00000102 05320100 00010405 9c000000  .....2..........
 0ba0 01080597 00000001 0108d300 0000049b  ................
 0bb0 01000031 53000000 0102071f 01000004  ...1S...........
 0bc0 a4010000 34690000 00075a00 00000104  ....4i....Z.....
 0bd0 07b90000 00010807 b4000000 08040569  ...............i
 0be0 6e740001 0407be00 000009d8 03000010  nt..............
 0bf0 030408d5 00000002 09040000 05490000  .............I..
 0c00 00000214 04000006 49000000 0202e203  ........I.......
 0c10 00000749 00000004 02af0300 00084900  ...I..........I.
 0c20 00000602 cc030000 095a0000 00080225  .........Z.....%
 0c30 0400000a 5a000000 0c000aed 03000001  ....Z...........
 0c40 0506df85 00006500 0000019c 2f010000  ......e...../...
 0c50 03dc0300 002c2f01 00000291 00030104  .....,/.........
 0c60 00003a35 01000002 91040314 04000053  ..:5...........S
 0c70 49000000 02916403 e2030000 6e490000  I.....d.....nI..
 0c80 00029160 0bbd0300 00010714 64000000  ...`........d...
 0c90 02917400 05850000 000c0534 01000000  ..t........4....
 0ca0 22000000 0200d206 00000401 6e070000  "...........n...
 0cb0 44860000 60860000 2f040000 50000000  D...`.../...P...
 0cc0 89000000 01808900 00000500 0104e606  ................
 0cd0 000002e1 0000001d 6c040000 00000000  ........l.......
 0ce0 60860000 06000000 ea070000 010106d5  `...............
 0cf0 00000001 02053201 00000104 059c0000  ......2.........
 0d00 00010805 97000000 010108d3 00000001  ................
 0d10 02071f01 00000104 07b90000 00010807  ................
 0d20 b4000000 03040569 6e740001 0407be00  .......int......
 0d30 0000010c 04450200 00011004 81020000  .....E..........
 0d40 04720400 00010706 60860000 06000000  .r......`.......
 0d50 019c00                               ...
Contents of section .debug_abbrev:
 0000 01110010 06110112 01030e1b 0e250e13  .............%..
 0010 05000000 0124000b 0b3e0b03 0e000002  .....$...>......
 0020 1101250e 130b031f 1b1f1017 00000316  ..%.............
 0030 00030e3a 0b3b0b39 0b491300 00042400  ...:.;.9.I....$.
 0040 0b0b3e0b 03080000 05340003 0e3a0b3b  ..>......4...:.;
 0050 0b390b49 133f1902 18000000 010d0003  .9.I.?..........
 0060 083a2104 3b0b390b 4913380b 00000224  .:!.;.9.I.8....$
 0070 000b0b3e 0b030e00 00030d00 03083a21  ...>..........:!
 0080 043b0b39 0b491300 00041600 030e3a21  .;.9.I........:!
 0090 023b0b39 0b491300 00050d00 030e3a21  .;.9.I........:!
 00a0 033b2107 390b4913 380b0000 06050003  .;!.9.I.8.......
 00b0 0e3a2101 3b0b390b 49130218 00000717  .:!.;.9.I.......
 00c0 01030e0b 21043a21 043b0b39 21070113  ....!.:!.;.9!...
 00d0 00000805 00491300 00090500 03083a21  .....I........:!
 00e0 013b211a 390b4913 02180000 0a340003  .;!.9.I......4..
 00f0 0e3a2101 3b0b3921 1a491302 1800000b  .:!.;.9!.I......
 0100 1101250e 130b031f 1b1f1101 12061017  ..%.............
 0110 00000c24 000b0b3e 0b030800 000d1301  ...$...>........
 0120 03080b0b 3a0b3b0b 390b0113 00000e13  ....:.;.9.......
 0130 010b0b3a 0b3b0b39 0b011300 000f1301  ...:.;.9........
 0140 030e0b0b 3a0b3b0b 390b0113 0000102e  ....:.;.9.......
 0150 013f1903 0e3a0b3b 0b390b27 1949133c  .?...:.;.9.'.I.<
 0160 19011300 00110f00 0b0b4913 0000122e  ..........I.....
 0170 013f1903 0e3a0b3b 0b390b27 19491311  .?...:.;.9.'.I..
 0180 01120640 187c1901 13000013 0f000b0b  ...@.|..........
 0190 0000142e 013f1903 0e3a0b3b 0b390b27  .....?...:.;.9.'
 01a0 19491311 01120640 187c1900 00000111  .I.....@.|......
 01b0 00100611 01120103 0e1b0e25 0e130500  ...........%....
 01c0 00000124 000b0b3e 0b030e00 00020500  ...$...>........
 01d0 49130000 030b0111 01120600 00043400  I.............4.
 01e0 030e3a21 013b0b39 0b491302 18000005  ..:!.;.9.I......
 01f0 34000308 3a21013b 0b390b49 13021800  4...:!.;.9.I....
 0200 00060d00 030e3a21 033b2107 390b4913  ......:!.;!.9.I.
 0210 380b0000 07160003 0e3a2102 3b0b390b  8........:!.;.9.
 0220 49130000 082e013f 19030e3a 0b3b0b39  I......?...:.;.9
 0230 21062719 3c190113 0000090f 000b2104  !.'.<.........!.
 0240 49130000 0a260049 1300000b 2e013f19  I....&.I......?.
 0250 030e3a0b 3b0b390b 27194913 3c190113  ..:.;.9.'.I.<...
 0260 00000c0b 01110112 06011300 000d0101  ................
 0270 49130113 00000e21 0049132f 0b00000f  I......!.I./....
 0280 2e01030e 3a21013b 0b39210d 27191101  ....:!.;.9!.'...
 0290 12064018 7c190113 00001005 00030e3a  ..@.|..........:
 02a0 21013b0b 390b4913 02180000 11110125  !.;.9.I........%
 02b0 0e130b03 1f1b1f11 01120610 17000012  ................
 02c0 24000b0b 3e0b0308 00001334 00030e3a  $...>......4...:
 02d0 0b3b0b39 0b49133f 193c1900 00141301  .;.9.I.?.<......
 02e0 03080b0b 3a0b3b0b 390b0113 0000150f  ....:.;.9.......
 02f0 000b0b00 00162e01 3f19030e 3a0b3b0b  ........?...:.;.
 0300 390b2719 87011911 01120640 187c1901  9.'........@.|..
 0310 13000000 0124000b 0b3e0b03 0e000002  .....$...>......
 0320 0d000308 3a21033b 0b390b49 13380b00  ....:!.;.9.I.8..
 0330 00030d00 03083a21 033b0b39 0b491300  ......:!.;.9.I..
 0340 00040500 030e3a21 013b0b39 0b491302  ......:!.;.9.I..
 0350 18000005 1600030e 3a21023b 0b390b49  ........:!.;.9.I
 0360 13000006 0f000b21 04491300 00073400  .......!.I....4.
 0370 030e3a21 013b0b39 211a4913 02180000  ..:!.;.9!.I.....
 0380 08170103 0e0b2104 3a21033b 0b392107  ......!.:!.;.9!.
 0390 01130000 09050049 1300000a 2e013f19  .......I......?.
 03a0 030e3a21 013b0b39 0b271949 13110112  ..:!.;.9.'.I....
 03b0 0640187c 19011300 000b1101 250e130b  .@.|........%...
 03c0 031f1b1f 11011206 10170000 0c24000b  .............$..
 03d0 0b3e0b03 0800000d 13010b0b 3a0b3b0b  .>..........:.;.
 03e0 390b0113 00000e13 01030e0b 0b3a0b3b  9............:.;
 03f0 0b390b01 1300000f 2e013f19 030e3a0b  .9........?...:.
 0400 3b0b390b 27194913 3c190113 0000102e  ;.9.'.I.<.......
 0410 013f1903 0e3a0b3b 0b390b27 19110112  .?...:.;.9.'....
 0420 0640187c 19000000 010d0003 083a2103  .@.|.........:!.
 0430 3b0b390b 4913380b 00000224 000b0b3e  ;.9.I.8....$...>
 0440 0b030e00 00030d00 03083a21 033b0b39  ..........:!.;.9
 0450 0b491300 00041600 030e3a21 023b0b39  .I........:!.;.9
 0460 0b491300 00051701 030e0b21 043a2103  .I.........!.:!.
 0470 3b0b3921 07011300 00060500 49130000  ;.9!........I...
 0480 07110125 0e130b03 1f1b1f11 01120610  ...%............
 0490 17000008 24000b0b 3e0b0308 00000913  ....$...>.......
 04a0 010b0b3a 0b3b0b39 0b011300 000a1301  ...:.;.9........
 04b0 030e0b0b 3a0b3b0b 390b0113 00000b2e  ....:.;.9.......
 04c0 013f1903 0e3a0b3b 0b390b27 1949133c  .?...:.;.9.'.I.<
 04d0 19011300 000c0f00 0b0b4913 00000d2e  ..........I.....
 04e0 013f1903 0e3a0b3b 0b390b27 19110112  .?...:.;.9.'....
 04f0 0640187c 1900000e 05000308 3a0b3b0b  .@.|........:.;.
 0500 390b4913 02180000 0f340003 0e3a0b3b  9.I......4...:.;
 0510 0b390b49 13021800 00000124 000b0b3e  .9.I.......$...>
 0520 0b030e00 00020500 030e3a21 013b0b39  ..........:!.;.9
 0530 0b491302 18000003 1600030e 3a21023b  .I..........:!.;
 0540 0b390b49 13000004 05004913 00000534  .9.I......I....4
 0550 00030e3a 21013b0b 39210e49 13021800  ...:!.;.9!.I....
 0560 00060500 03083a21 013b0b39 0b491302  ......:!.;.9.I..
 0570 18000007 1101250e 130b031f 1b1f1101  ......%.........
 0580 12061017 00000824 000b0b3e 0b030800  .......$...>....
 0590 00092e01 3f19030e 3a0b3b0b 390b2719  ....?...:.;.9.'.
 05a0 49133c19 01130000 0a2e013f 19030e3a  I.<........?...:
 05b0 0b3b0b39 0b27193c 19011300 000b2e01  .;.9.'.<........
 05c0 3f19030e 3a0b3b0b 390b2719 11011206  ?...:.;.9.'.....
 05d0 40187c19 01130000 0c2e013f 19030e3a  @.|........?...:
 05e0 0b3b0b39 0b271949 13110112 0640187c  .;.9.'.I.....@.|
 05f0 19000000 01110010 06110112 01030e1b  ................
 0600 0e250e13 05000000 01110010 06110112  .%..............
 0610 01030e1b 0e250e13 05000000 0124000b  .....%.......$..
 0620 0b3e0b03 0e000002 0d00030e 3a21033b  .>..........:!.;
 0630 0b39210e 4913380b 00000305 00030e3a  .9!.I.8........:
 0640 21013b21 05390b49 13021800 00041600  !.;!.9.I........
 0650 030e3a21 023b0b39 21194913 0000050f  ..:!.;.9!.I.....
 0660 000b2104 49130000 06110125 0e130b03  ..!.I......%....
 0670 1f1b1f11 01120610 17000007 26004913  ............&.I.
 0680 00000824 000b0b3e 0b030800 00091301  ...$...>........
 0690 030e0b0b 3a0b3b0b 390b0113 00000a2e  ....:.;.9.......
 06a0 013f1903 0e3a0b3b 0b390b27 19110112  .?...:.;.9.'....
 06b0 0640187a 19011300 000b3400 030e3a0b  .@.z......4...:.
 06c0 3b0b390b 49130218 00000c15 00271900  ;.9.I........'..
 06d0 00000111 00100611 01120103 0e1b0e25  ...............%
 06e0 0e130500 00000124 000b0b3e 0b030e00  .......$...>....
 06f0 00021101 250e130b 031f1b1f 11011206  ....%...........
 0700 10170000 0324000b 0b3e0b03 08000004  .....$...>......
 0710 2e003f19 030e3a0b 3b0b390b 27191101  ..?...:.;.9.'...
 0720 12064018 7a190000 00                 ..@.z....
Contents of section .debug_aranges:
 0000 1c000000 02000000 00000400 00000000  ................
 0010 4a7e0000 f3000000 00000000 00000000  J~..............
 0020 14000000 02002600 00000400 00000000  ......&.........
 0030 00000000 00000000 1c000000 0200a900  ................
 0040 00000400 00000000 3d7f0000 13010000  ........=.......
 0050 00000000 00000000 1c000000 0200e502  ................
 0060 00000400 00000000 007c0000 4a020000  .........|..J...
 0070 00000000 00000000 1c000000 02000b03  ................
 0080 00000400 00000000 50800000 3b020000  ........P...;...
 0090 00000000 00000000 1c000000 0200af05  ................
 00a0 00000400 00000000 8b820000 25010000  ............%...
 00b0 00000000 00000000 1c000000 0200e007  ................
 00c0 00000400 00000000 b0830000 52000000  ............R...
 00d0 00000000 00000000 1c000000 02008b09  ................
 00e0 00000400 00000000 02840000 fa000000  ................
 00f0 00000000 00000000 1c000000 0200190b  ................
 0100 00000400 00000000 fc840000 9b000000  ................
 0110 00000000 00000000 1c000000 02003f0b  ..............?.
 0120 00000400 00000000 97850000 48000000  ............H...
 0130 00000000 00000000 1c000000 0200650b  ..............e.
 0140 00000400 00000000 df850000 65000000  ............e...
 0150 00000000 00000000 1c000000 0200a00c  ................
 0160 00000400 00000000 44860000 1c000000  ........D.......
 0170 00000000 00000000 1c000000 0200c60c  ................
 0180 00000400 00000000 60860000 06000000  ........`.......
 0190 00000000 00000000                    ........
Contents of section .debug_str:
 0000 2f557365 72732f67 776f6e6d 696e7375  /Users/gwonminsu
 0010 2f446f63 756d656e 74732f4c 6f63616c  /Documents/Local
 0020 50726f6a 65637473 2f656d6f 732f626f  Projects/emos/bo
 0030 6f742f61 7263682f 69363836 2f70632f  ot/arch/i686/pc/
 0040 62696f73 2f62696f 7363616c 6c2e5300  bios/bioscall.S.
 0050 2f557365 72732f67 776f6e6d 696e7375  /Users/gwonminsu
 0060 2f446f63 756d656e 74732f4c 6f63616c  /Documents/Local
 0070 50726f6a 65637473 2f656d6f 732f6275  Projects/emos/bu
 0080 696c642f 626f6f74 00474e55 20415320  ild/boot.GNU AS 
 0090 322e3433 2e31006c 6f6e6720 6c6f6e67  2.43.1.long long
 00a0 20696e74 005f7063 5f626f6f 745f6472   int._pc_boot_dr
 00b0 69766500 6c6f6e67 206c6f6e 6720756e  ive.long long un
 00c0 7369676e 65642069 6e740075 696e7438  signed int.uint8
 00d0 5f740075 6e736967 6e656420 63686172  _t.unsigned char
 00e0 00474e55 20433137 2031342e 322e3020  .GNU C17 14.2.0 
 00f0 2d6d6172 63683d69 36383620 2d67202d  -march=i686 -g -
 0100 70656461 6e746963 2d657272 6f727320  pedantic-errors 
 0110 2d666672 65657374 616e6469 6e670073  -ffreestanding.s
 0120 686f7274 20756e73 69676e65 6420696e  hort unsigned in
 0130 74007368 6f727420 696e7400 73656374  t.short int.sect
 0140 6f720063 796c696e 64657200 64617461  or.cylinder.data
 0150 5f726567 00686561 6400696e 6465785f  _reg.head.index_
 0160 72656700 5f70635f 62696f73 5f726573  reg._pc_bios_res
 0170 65745f64 72697665 0062696f 7363616c  et_drive.bioscal
 0180 6c5f7265 6773005f 70635f62 696f735f  l_regs._pc_bios_
 0190 63616c6c 00636f75 6e740075 696e7431  call.count.uint1
 01a0 365f7400 75696e74 33325f74 005f7063  6_t.uint32_t._pc
 01b0 5f62696f 735f7265 61645f64 72697665  _bios_read_drive
 01c0 5f636873 002f5573 6572732f 67776f6e  _chs./Users/gwon
 01d0 6d696e73 752f446f 63756d65 6e74732f  minsu/Documents/
 01e0 4c6f6361 6c50726f 6a656374 732f656d  LocalProjects/em
 01f0 6f732f62 6f6f742f 61726368 2f693638  os/boot/arch/i68
 0200 362f7063 2f666c6f 70626f6f 742e5300  6/pc/flopboot.S.
 0210 5f70635f 7063695f 6366675f 72656164  _pc_pci_cfg_read
 0220 0076616c 7565005f 70635f62 696f735f  .value._pc_bios_
 0230 72656164 5f6b6579 626f6172 64006465  read_keyboard.de
 0240 76696365 006c6f6e 6720646f 75626c65  vice.long double
 0250 005f7063 5f62696f 735f7474 795f6f75  ._pc_bios_tty_ou
 0260 74707574 0066756e 6374696f 6e005f70  tput.function._p
 0270 635f696e 69740068 65785f63 68617273  c_init.hex_chars
 0280 005f466c 6f617431 32380070 72696e74  ._Float128.print
 0290 5f686578 5f64776f 72640070 72696e74  _hex_dword.print
 02a0 5f686578 5f627974 65007363 616e636f  _hex_byte.scanco
 02b0 6465005f 70635f62 696f735f 72656164  de._pc_bios_read
 02c0 5f6b6579 626f6172 645f6e6f 77616974  _keyboard_nowait
 02d0 00617363 6969005f 70635f62 696f735f  .ascii._pc_bios_
 02e0 72656164 5f6b6579 626f6172 645f666c  read_keyboard_fl
 02f0 61677300 5f693638 365f6f75 74333200  ags._i686_out32.
 0300 61646472 65737300 5f693638 365f696e  address._i686_in
 0310 3332005f 70635f70 63695f63 66675f77  32._pc_pci_cfg_w
 0320 72697465 002f5573 6572732f 67776f6e  rite./Users/gwon
 0330 6d696e73 752f446f 63756d65 6e74732f  minsu/Documents/
 0340 4c6f6361 6c50726f 6a656374 732f656d  LocalProjects/em
 0350 6f732f62 6f6f742f 61726368 2f693638  os/boot/arch/i68
 0360 362f6370 755f6d6f 64652e53 002f5573  6/cpu_mode.S./Us
 0370 6572732f 67776f6e 6d696e73 752f446f  ers/gwonminsu/Do
 0380 63756d65 6e74732f 4c6f6361 6c50726f  cuments/LocalPro
 0390 6a656374 732f656d 6f732f62 6f6f742f  jects/emos/boot/
 03a0 61726368 2f693638 362f696f 2e53006f  arch/i686/io.S.o
 03b0 66667365 745f6d69 64646c65 0068616e  ffset_middle.han
 03c0 646c6572 5f6f6666 73657400 6f666673  dler_offset.offs
 03d0 65745f68 69676800 6964745f 656e7472  et_high.idt_entr
 03e0 79006174 74726962 75746573 005f6936  y.attributes._i6
 03f0 38365f69 64745f73 65745f65 6e747279  86_idt_set_entry
 0400 0068616e 646c6572 006f6666 7365745f  .handler.offset_
 0410 6c6f7700 7365676d 656e745f 73656c65  low.segment_sele
 0420 63746f72 00726573 65727665 6432002f  ctor.reserved2./
 0430 55736572 732f6777 6f6e6d69 6e73752f  Users/gwonminsu/
 0440 446f6375 6d656e74 732f4c6f 63616c50  Documents/LocalP
 0450 726f6a65 6374732f 656d6f73 2f626f6f  rojects/emos/boo
 0460 742f6172 63682f69 3638362f 6964742e  t/arch/i686/idt.
 0470 53006d61 696e00                      S.main.
Contents of section .debug_line_str:
 0000 2f557365 72732f67 776f6e6d 696e7375  /Users/gwonminsu
 0010 2f446f63 756d656e 74732f4c 6f63616c  /Documents/Local
 0020 50726f6a 65637473 2f656d6f 732f6275  Projects/emos/bu
 0030 696c642f 626f6f74 002f5573 6572732f  ild/boot./Users/
 0040 67776f6e 6d696e73 752f446f 63756d65  gwonminsu/Docume
 0050 6e74732f 4c6f6361 6c50726f 6a656374  nts/LocalProject
 0060 732f656d 6f732f62 6f6f742f 61726368  s/emos/boot/arch
 0070 2f693638 362f7063 2f626f6f 74696e66  /i686/pc/bootinf
 0080 6f2e6300 2f557365 72732f67 776f6e6d  o.c./Users/gwonm
 0090 696e7375 2f446f63 756d656e 74732f4c  insu/Documents/L
 00a0 6f63616c 50726f6a 65637473 2f656d6f  ocalProjects/emo
 00b0 732f626f 6f742f61 7263682f 69363836  s/boot/arch/i686
 00c0 2f706300 2f6f7074 2f686f6d 65627265  /pc./opt/homebre
 00d0 772f4365 6c6c6172 2f693638 362d656c  w/Cellar/i686-el
 00e0 662d6763 632f3134 2e322e30 2f6c6962  f-gcc/14.2.0/lib
 00f0 2f676363 2f693638 362d656c 662f3134  /gcc/i686-elf/14
 0100 2e322e30 2f696e63 6c756465 00737464  .2.0/include.std
 0110 696e742d 6763632e 68002f55 73657273  int-gcc.h./Users
 0120 2f67776f 6e6d696e 73752f44 6f63756d  /gwonminsu/Docum
 0130 656e7473 2f4c6f63 616c5072 6f6a6563  ents/LocalProjec
 0140 74732f65 6d6f732f 626f6f74 2f617263  ts/emos/boot/arc
 0150 682f6936 38362f70 632f6269 6f732f64  h/i686/pc/bios/d
 0160 69736b2e 63002f55 73657273 2f67776f  isk.c./Users/gwo
 0170 6e6d696e 73752f44 6f63756d 656e7473  nminsu/Documents
 0180 2f4c6f63 616c5072 6f6a6563 74732f65  /LocalProjects/e
 0190 6d6f732f 626f6f74 2f617263 682f6936  mos/boot/arch/i6
 01a0 38362f70 632f6269 6f73002f 55736572  86/pc/bios./User
 01b0 732f6777 6f6e6d69 6e73752f 446f6375  s/gwonminsu/Docu
 01c0 6d656e74 732f4c6f 63616c50 726f6a65  ments/LocalProje
 01d0 6374732f 656d6f73 2f626f6f 742f636f  cts/emos/boot/co
 01e0 6d6d6f6e 00646973 6b2e6800 62696f73  mmon.disk.h.bios
 01f0 63616c6c 2e68002f 55736572 732f6777  call.h./Users/gw
 0200 6f6e6d69 6e73752f 446f6375 6d656e74  onminsu/Document
 0210 732f4c6f 63616c50 726f6a65 6374732f  s/LocalProjects/
 0220 656d6f73 2f626f6f 742f6172 63682f69  emos/boot/arch/i
 0230 3638362f 70632f69 6e69742e 63002f55  686/pc/init.c./U
 0240 73657273 2f67776f 6e6d696e 73752f44  sers/gwonminsu/D
 0250 6f63756d 656e7473 2f4c6f63 616c5072  ocuments/LocalPr
 0260 6f6a6563 74732f65 6d6f732f 626f6f74  ojects/emos/boot
 0270 2f617263 682f6936 38362f70 632f7063  /arch/i686/pc/pc
 0280 69006366 67737061 63652e68 006b6579  i.cfgspace.h.key
 0290 626f6172 642e6800 76696465 6f2e6800  board.h.video.h.
 02a0 626f6f74 696e666f 2e68002f 55736572  bootinfo.h./User
 02b0 732f6777 6f6e6d69 6e73752f 446f6375  s/gwonminsu/Docu
 02c0 6d656e74 732f4c6f 63616c50 726f6a65  ments/LocalProje
 02d0 6374732f 656d6f73 2f626f6f 742f6172  cts/emos/boot/ar
 02e0 63682f69 3638362f 70632f62 696f732f  ch/i686/pc/bios/
 02f0 6b657962 6f617264 2e63002f 55736572  keyboard.c./User
 0300 732f6777 6f6e6d69 6e73752f 446f6375  s/gwonminsu/Docu
 0310 6d656e74 732f4c6f 63616c50 726f6a65  ments/LocalProje
 0320 6374732f 656d6f73 2f626f6f 742f6172  cts/emos/boot/ar
 0330 63682f69 3638362f 70632f62 696f732f  ch/i686/pc/bios/
 0340 76696465 6f2e6300 2f557365 72732f67  video.c./Users/g
 0350 776f6e6d 696e7375 2f446f63 756d656e  wonminsu/Documen
 0360 74732f4c 6f63616c 50726f6a 65637473  ts/LocalProjects
 0370 2f656d6f 732f626f 6f742f61 7263682f  /emos/boot/arch/
 0380 69363836 2f70632f 7063692f 63666773  i686/pc/pci/cfgs
 0390 70616365 2e63002f 55736572 732f6777  pace.c./Users/gw
 03a0 6f6e6d69 6e73752f 446f6375 6d656e74  onminsu/Document
 03b0 732f4c6f 63616c50 726f6a65 6374732f  s/LocalProjects/
 03c0 656d6f73 2f626f6f 742f6172 63682f69  emos/boot/arch/i
 03d0 3638362f 70632f70 63692f2e 2e2f2e2e  686/pc/pci/../..
 03e0 00696f2e 68002f55 73657273 2f67776f  .io.h./Users/gwo
 03f0 6e6d696e 73752f44 6f63756d 656e7473  nminsu/Documents
 0400 2f4c6f63 616c5072 6f6a6563 74732f65  /LocalProjects/e
 0410 6d6f732f 626f6f74 2f617263 682f6936  mos/boot/arch/i6
 0420 38362f69 64742e63 002f5573 6572732f  86/idt.c./Users/
 0430 67776f6e 6d696e73 752f446f 63756d65  gwonminsu/Docume
 0440 6e74732f 4c6f6361 6c50726f 6a656374  nts/LocalProject
 0450 732f656d 6f732f62 6f6f742f 61726368  s/emos/boot/arch
 0460 2f693638 36006964 742e6800 2f557365  /i686.idt.h./Use
 0470 72732f67 776f6e6d 696e7375 2f446f63  rs/gwonminsu/Doc
 0480 756d656e 74732f4c 6f63616c 50726f6a  uments/LocalProj
 0490 65637473 2f656d6f 732f626f 6f742f63  ects/emos/boot/c
 04a0 6f6d6d6f 6e2f6d61 696e2e63 00        ommon/main.c.
Contents of section .comment:
 0000 4743433a 2028474e 55292031 342e322e  GCC: (GNU) 14.2.
 0010 3000                                 0.
Contents of section .debug_frame:
 0000 10000000 ffffffff 0100017c 080c0404  ...........|....
 0010 88010000 1c000000 00000000 3d7f0000  ............=...
 0020 5f000000 410e0885 02420d05 025a0d04  _...A....B...Z..
 0030 41c50e04 1c000000 00000000 9c7f0000  A...............
 0040 b4000000 410e0885 02420d05 02af0d04  ....A....B......
 0050 41c50e04 10000000 ffffffff 0100017c  A..............|
 0060 080c0404 88010000 1c000000 54000000  ............T...
 0070 50800000 46000000 410e0885 02420d05  P...F...A....B..
 0080 02410d04 41c50e04 1c000000 54000000  .A..A.......T...
 0090 96800000 70000000 410e0885 02420d05  ....p...A....B..
 00a0 026b0d04 41c50e04 18000000 54000000  .k..A.......T...
 00b0 06810000 85010000 410e0885 02420d05  ........A....B..
 00c0 46830300 10000000 ffffffff 0100017c  F..............|
 00d0 080c0404 88010000 1c000000 c4000000  ................
 00e0 8b820000 65000000 410e0885 02420d05  ....e...A....B..
 00f0 02600d04 41c50e04 1c000000 c4000000  .`..A...........
 0100 f0820000 78000000 410e0885 02420d05  ....x...A....B..
 0110 02730d04 41c50e04 1c000000 c4000000  .s..A...........
 0120 68830000 48000000 410e0885 02420d05  h...H...A....B..
 0130 02430d04 41c50e04 10000000 ffffffff  .C..A...........
 0140 0100017c 080c0404 88010000 1c000000  ...|............
 0150 38010000 b0830000 52000000 410e0885  8.......R...A...
 0160 02420d05 024d0d04 41c50e04 10000000  .B...M..A.......
 0170 ffffffff 0100017c 080c0404 88010000  .......|........
 0180 20000000 6c010000 02840000 7c000000   ...l.......|...
 0190 410e0885 02420d05 46830302 71c30d04  A....B..F...q...
 01a0 41c50e04 20000000 6c010000 7e840000  A... ...l...~...
 01b0 7e000000 410e0885 02420d05 46830302  ~...A....B..F...
 01c0 73c30d04 41c50e04 10000000 ffffffff  s...A...........
 01d0 0100017c 080c0404 88010000 1c000000  ...|............
 01e0 c8010000 df850000 65000000 410e0885  ........e...A...
 01f0 02420d05 02600d04 41c50e04 10000000  .B...`..A.......
 0200 ffffffff 0100017c 080c0404 88010000  .......|........
 0210 1c000000 fc010000 60860000 06000000  ........`.......
 0220 410e0885 02420d05 42c50c04 04000000  A....B..B.......
Contents of section .symtab:
 0000 00000000 00000000 00000000 00000000  ................
 0010 01000000 00000000 00000000 0400f1ff  ................
 0020 10000000 55aa0000 00000000 0000f1ff  ....U...........
 0030 16000000 027c0000 00000000 00000200  .....|..........
 0040 1d000000 0d7c0000 00000000 00000200  .....|..........
 0050 28000000 0e7e0000 00000000 00000200  (....~..........
 0060 2f000000 207c0000 00000000 00000200  /... |..........
 0070 3c000000 327c0000 00000000 00000200  <...2|..........
 0080 4a000000 277c0000 00000000 00000200  J...'|..........
 0090 59000000 307c0000 00000000 00000200  Y...0|..........
 00a0 68000000 007e0000 00000000 00000200  h....~..........
 00b0 75000000 047e0000 00000000 00000200  u....~..........
 00c0 84000000 0d7e0000 00000000 00000200  .....~..........
 00d0 93000000 127e0000 00000000 00000200  .....~..........
 00e0 a1000000 227e0000 00000000 00000200  ...."~..........
 00f0 aa000000 2d7e0000 00000000 00000200  ....-~..........
 0100 b7000000 1f7e0000 00000000 00000200  .....~..........
 0110 c4000000 2a7e0000 00000000 00000200  ....*~..........
 0120 ca000000 00000000 00000000 0400f1ff  ................
 0130 d5000000 00000000 00000000 0400f1ff  ................
 0140 dc000000 00000000 00000000 0400f1ff  ................
 0150 e3000000 50800000 46000000 02000200  ....P...F.......
 0160 f2000000 9c860000 11000000 01000400  ................
 0170 fe000000 96800000 70000000 02000200  ........p.......
 0180 0e010000 00000000 00000000 0400f1ff  ................
 0190 19010000 00000000 00000000 0400f1ff  ................
 01a0 21010000 00000000 00000000 0400f1ff  !...............
 01b0 2c010000 00000000 00000000 0400f1ff  ,...............
 01c0 3b010000 fc7b0000 00000000 0000f1ff  ;....{..........
 01d0 4b010000 fc3f0000 00000000 0000f1ff  K....?..........
 01e0 5b010000 08000000 00000000 0000f1ff  [...............
 01f0 69010000 10000000 00000000 0000f1ff  i...............
 0200 77010000 18000000 00000000 0000f1ff  w...............
 0210 87010000 20000000 00000000 0000f1ff  .... ...........
 0220 97010000 6e860000 00000000 00000300  ....n...........
 0230 9c010000 15850000 00000000 00000200  ................
 0240 a3010000 6a860000 00000000 00000300  ....j...........
 0250 ae010000 6d850000 00000000 00000200  ....m...........
 0260 b7010000 89850000 00000000 00000200  ................
 0270 be010000 74860000 00000000 00000300  ....t...........
 0280 c2010000 00000000 00000000 0400f1ff  ................
 0290 c8010000 00000000 00000000 0400f1ff  ................
 02a0 cf010000 ca850000 00000000 10000200  ................
 02b0 da010000 df850000 65000000 12000200  ........e.......
 02c0 ee010000 f0820000 78000000 12000200  ........x.......
 02d0 0c020000 b0830000 52000000 12000200  ........R.......
 02e0 20020000 02840000 7c000000 12000200   .......|.......
 02f0 31020000 00080000 01000000 11000100  1...............
 0300 40020000 d5850000 00000000 10000200  @...............
 0310 4b020000 97850000 00000000 10000200  K...............
 0320 56020000 fc840000 00000000 10000200  V...............
 0330 6a020000 46850000 00000000 10000200  j...F...........
 0340 7e020000 68830000 48000000 12000200  ~...h...H.......
 0350 9b020000 007c0000 00000000 10000200  .....|..........
 0360 a2020000 b3850000 00000000 10000200  ................
 0370 ae020000 9c7f0000 b4000000 12000200  ................
 0380 c6020000 60860000 06000000 12000200  ....`...........
 0390 cb020000 06810000 85010000 12000200  ................
 03a0 d4020000 7e840000 7e000000 12000200  ....~...~.......
 03b0 e6020000 44860000 00000000 10000200  ....D...........
 03c0 f5020000 c0850000 00000000 10000200  ................
 03d0 ff020000 a4850000 00000000 10000200  ................
 03e0 0b030000 3d7f0000 5f000000 12000200  ....=..._.......
 03f0 20030000 8b820000 65000000 12000200   .......e.......
 0400 37030000 4a7e0000 00000000 10000200  7...J~..........
Contents of section .strtab:
 0000 00666c6f 70626f6f 742e532e 6f626a00  .flopboot.S.obj.
 0010 4d414749 43007374 61727431 002e7265  MAGIC.start1..re
 0020 61645f64 69736b00 73746172 7432002e  ad_disk.start2..
 0030 7072696e 745f6572 726f7200 7374725f  print_error.str_
 0040 6469736b 6572726f 72002e70 72696e74  diskerror..print
 0050 5f657272 6f722e31 002e7072 696e745f  _error.1..print_
 0060 6572726f 722e3200 7072696e 745f7374  error.2.print_st
 0070 72696e67 00707269 6e745f73 7472696e  ring.print_strin
 0080 672e3100 7072696e 745f7374 72696e67  g.1.print_string
 0090 2e32002e 61637469 76617465 5f613230  .2..activate_a20
 00a0 00737461 7274322e 31007374 725f6132  .start2.1.str_a2
 00b0 30657272 6f72002e 61637469 76617465  0error..activate
 00c0 5f613230 2e68616c 7400626f 6f74696e  _a20.halt.bootin
 00d0 666f2e63 00646973 6b2e6300 696e6974  fo.c.disk.c.init
 00e0 2e630070 72696e74 5f686578 5f627974  .c.print_hex_byt
 00f0 65006865 785f6368 6172732e 30007072  e.hex_chars.0.pr
 0100 696e745f 6865785f 64776f72 64006b65  int_hex_dword.ke
 0110 79626f61 72642e63 00766964 656f2e63  yboard.c.video.c
 0120 00636667 73706163 652e6300 6370755f  .cfgspace.c.cpu_
 0130 6d6f6465 2e532e6f 626a0052 45414c5f  mode.S.obj.REAL_
 0140 53544143 4b5f494e 49540050 524f545f  STACK_INIT.PROT_
 0150 53544143 4b5f494e 49540050 524f545f  STACK_INIT.PROT_
 0160 434f4445 5f534547 0050524f 545f4441  CODE_SEG.PROT_DA
 0170 54415f53 45470050 524f5431 365f434f  TA_SEG.PROT16_CO
 0180 44455f53 45470050 524f5431 365f4441  DE_SEG.PROT16_DA
 0190 54415f53 45470067 64747200 2e706d6f  TA_SEG.gdtr..pmo
 01a0 64650070 726f745f 73746163 6b002e70  de.prot_stack..p
 01b0 6d6f6465 3136002e 726d6f64 65006764  mode16..rmode.gd
 01c0 74006964 742e6300 6d61696e 2e63005f  t.idt.c.main.c._
 01d0 69363836 5f696e31 36005f69 3638365f  i686_in16._i686_
 01e0 6964745f 7365745f 656e7472 79005f70  idt_set_entry._p
 01f0 635f6269 6f735f72 6561645f 6b657962  c_bios_read_keyb
 0200 6f617264 5f6e6f77 61697400 5f70635f  oard_nowait._pc_
 0210 62696f73 5f747479 5f6f7574 70757400  bios_tty_output.
 0220 5f70635f 7063695f 6366675f 72656164  _pc_pci_cfg_read
 0230 005f7063 5f626f6f 745f6472 69766500  ._pc_boot_drive.
 0240 5f693638 365f696e 3332005f 69363836  _i686_in32._i686
 0250 5f6f7574 38007377 69746368 5f726561  _out8.switch_rea
 0260 6c5f746f 5f70726f 74007377 69746368  l_to_prot.switch
 0270 5f70726f 745f746f 5f726561 6c005f70  _prot_to_real._p
 0280 635f6269 6f735f72 6561645f 6b657962  c_bios_read_keyb
 0290 6f617264 5f666c61 6773005f 73746172  oard_flags._star
 02a0 74005f69 3638365f 6f757433 32005f70  t._i686_out32._p
 02b0 635f6269 6f735f72 6561645f 64726976  c_bios_read_driv
 02c0 655f6368 73006d61 696e005f 70635f69  e_chs.main._pc_i
 02d0 6e697400 5f70635f 7063695f 6366675f  nit._pc_pci_cfg_
 02e0 77726974 65005f69 3638365f 6964745f  write._i686_idt_
 02f0 6c6f6164 005f6936 38365f69 6e38005f  load._i686_in8._
 0300 69363836 5f6f7574 3136005f 70635f62  i686_out16._pc_b
 0310 696f735f 72657365 745f6472 69766500  ios_reset_drive.
 0320 5f70635f 62696f73 5f726561 645f6b65  _pc_bios_read_ke
 0330 79626f61 7264005f 70635f62 696f735f  yboard._pc_bios_
 0340 63616c6c 00                          call.
Contents of section .shstrtab:
 0000 002e7379 6d746162 002e7374 72746162  ..symtab..strtab
 0010 002e7368 73747274 6162002e 62737300  ..shstrtab..bss.
 0020 2e746578 74002e64 61746100 2e726f64  .text..data..rod
 0030 61746100 2e646562 75675f6c 696e6500  ata..debug_line.
 0040 2e646562 75675f69 6e666f00 2e646562  .debug_info..deb
 0050 75675f61 62627265 76002e64 65627567  ug_abbrev..debug
 0060 5f617261 6e676573 002e6465 6275675f  _aranges..debug_
 0070 73747200 2e646562 75675f6c 696e655f  str..debug_line_
 0080 73747200 2e636f6d 6d656e74 002e6465  str..comment..de
 0090 6275675f 6672616d 6500               bug_frame.

Disassembly of section .text:

00007c00 <_start>:
;     jmp     start1
    7c00: eb 00                        	jmp	0x7c02 <start1>

00007c02 <start1>:
;     xor     %ax, %ax
    7c02: 31 c0                        	xorl	%eax, %eax
;     mov     %ax, %ds
    7c04: 8e d8                        	movl	%eax, %ds
;     mov     %ax, %es
    7c06: 8e c0                        	movl	%eax, %es
;     mov     %ax, %ss                    # clear segment registers
    7c08: 8e d0                        	movl	%eax, %ss
;     mov     $0x7C00, %sp                # setup stack pointer to $0000h:$7C00h
    7c0a: bc 00 7c b4 02               	movl	$0x2b47c00, %esp        # imm = 0x2B47C00

00007c0d <.read_disk>:
;     mov     $0x02, %ah                  # read
    7c0d: b4 02                        	movb	$0x2, %ah
;     mov     $0x11, %al                  # 17 sectors
    7c0f: b0 11                        	movb	$0x11, %al
;     mov     $0x00, %ch                  # starting from cylinder 0
    7c11: b5 00                        	movb	$0x0, %ch
;     mov     $0x02, %cl                  # sector 2
    7c13: b1 02                        	movb	$0x2, %cl
;     mov     $0x00, %dh                  # head 0
    7c15: b6 00                        	movb	$0x0, %dh
;     mov     $0x7E00, %bx                # to buffer starts after this code
    7c17: bb 00 7e cd 13               	movl	$0x13cd7e00, %ebx       # imm = 0x13CD7E00
;     jnc     start2                      # jump to next step if there's no error
    7c1c: 0f 83 ee 01 b4 0e            	jae	0xeb47e10 <hex_chars.0+0xeb3f774>

00007c20 <.print_error>:
;     mov     $0x0E, %ah                  # else, print
    7c20: b4 0e                        	movb	$0xe, %ah
;     mov     $str_diskerror, %si         # error string
    7c22: be 32 7c 31 db               	movl	$0xdb317c32, %esi       # imm = 0xDB317C32

00007c27 <.print_error.1>:
;     lodsb
    7c27: ac                           	lodsb	(%esi), %al
;     or      %al, %al
    7c28: 08 c0                        	orb	%al, %al
;     jz      .print_error.2              # until the char is NULL
    7c2a: 74 04                        	je	0x7c30 <.print_error.2>
;     int     $0x10                       # do it!
    7c2c: cd 10                        	int	$0x10
;     jmp     .print_error.1              # print next character
    7c2e: eb f7                        	jmp	0x7c27 <.print_error.1>

00007c30 <.print_error.2>:
;     jmp     .read_disk                  # retry
    7c30: eb db                        	jmp	0x7c0d <.read_disk>

00007c32 <str_diskerror>:
    7c32: 45                           	incl	%ebp
    7c33: 72 72                        	jb	0x7ca7 <str_diskerror+0x75>
    7c35: 6f                           	outsl	(%esi), %dx
    7c36: 72 20                        	jb	0x7c58 <str_diskerror+0x26>
    7c38: 72 65                        	jb	0x7c9f <str_diskerror+0x6d>
    7c3a: 61                           	popal
    7c3b: 64 69 6e 67 20 64 69 73      	imull	$0x73696420, %fs:0x67(%esi), %ebp # imm = 0x73696420
    7c43: 6b 2e 20                     	imull	$0x20, (%esi), %ebp
    7c46: 52                           	pushl	%edx
    7c47: 65 74 72                     	je	0x7cbc <str_diskerror+0x8a>
    7c4a: 79 69                        	jns	0x7cb5 <str_diskerror+0x83>
    7c4c: 6e                           	outsb	(%esi), %dx
    7c4d: 67 2e 2e 2e 0d 0a 00 00 00   	addr16		orl	$0xa, %eax
		...
    7dfe: 55                           	pushl	%ebp
    7dff: aa                           	stosb	%al, %es:(%edi)

00007e00 <print_string>:
;     mov     $0x0E, %ah                  # print the string in %si
    7e00: b4 0e                        	movb	$0xe, %ah
;     xor     %bx, %bx
    7e02: 31 db                        	xorl	%ebx, %ebx

00007e04 <print_string.1>:
;     lodsb
    7e04: ac                           	lodsb	(%esi), %al
;     or      %al, %al
    7e05: 08 c0                        	orb	%al, %al
;     jz      print_string.2              # until the char is NULL
    7e07: 74 04                        	je	0x7e0d <print_string.2>
;     int     $0x10                       # do it!
    7e09: cd 10                        	int	$0x10
;     jmp     print_string.1              # print next character
    7e0b: eb f7                        	jmp	0x7e04 <print_string.1>

00007e0d <print_string.2>:
;     ret                                 # return
    7e0d: c3                           	retl

00007e0e <start2>:
;     mov     %dl, _pc_boot_drive         # store the index of the boot drive
    7e0e: 88 16                        	movb	%dl, (%esi)
    7e10: 00 08                        	addb	%cl, (%eax)

00007e12 <.activate_a20>:
;     mov     $0x2401, %ax                # activate A20 via bios
    7e12: b8 01 24 cd 15               	movl	$0x15cd2401, %eax       # imm = 0x15CD2401
;     jnc     start2.1                    # finish if there's no error
    7e17: 73 09                        	jae	0x7e22 <start2.1>
;     mov     $str_a20error, %si
    7e19: be 2d 7e e8 e1               	movl	$0xe1e87e2d, %esi       # imm = 0xE1E87E2D
;     call    print_string                # else print error
    7e1e: ff f4                        	pushl	%esp

00007e1f <.activate_a20.halt>:
;     hlt                                 # and halt forever
    7e1f: f4                           	hlt
;     jmp     .activate_a20.halt
    7e20: eb fd                        	jmp	0x7e1f <.activate_a20.halt>

00007e22 <start2.1>:
;     call    switch_real_to_prot         # switch to protected mode
    7e22: e8 d7 06 e8 dc               	calll	0xdce884fe <hex_chars.0+0xffffffffdce7fe62>
;     call    _pc_init                    # jump to c code.
    7e27: 02 00                        	addb	(%eax), %al
    7e29: 00 f4                        	addb	%dh, %ah

00007e2a <.halt>:
;     hlt                                 # halt forever
    7e2a: f4                           	hlt
;     jmp     .halt
    7e2b: eb fd                        	jmp	0x7e2a <.halt>

00007e2d <str_a20error>:
    7e2d: 45                           	incl	%ebp
    7e2e: 72 72                        	jb	0x7ea2 <_pc_bios_call+0x58>
    7e30: 6f                           	outsl	(%esi), %dx
    7e31: 72 20                        	jb	0x7e53 <_pc_bios_call+0x9>
    7e33: 61                           	popal
    7e34: 63 74 69 76                  	arpl	%si, 0x76(%ecx,%ebp,2)
    7e38: 61                           	popal
    7e39: 74 69                        	je	0x7ea4 <_pc_bios_call+0x5a>
    7e3b: 6e                           	outsb	(%esi), %dx
    7e3c: 67 20 41 32                  	andb	%al, 0x32(%bx,%di)
    7e40: 30 20                        	xorb	%ah, (%eax)
    7e42: 6c                           	insb	%dx, %es:(%edi)
    7e43: 69 6e 65 2e 0d 0a 00         	imull	$0xa0d2e, 0x65(%esi), %ebp # imm = 0xA0D2E

00007e4a <_pc_bios_call>:
;     push    %ebp                        # set up stack base pointer
    7e4a: 55                           	pushl	%ebp
;     mov     %esp, %ebp
    7e4b: 89 e5                        	movl	%esp, %ebp
;     push    %eax                        # push registers
    7e4d: 50                           	pushl	%eax
;     push    %ecx
    7e4e: 51                           	pushl	%ecx
;     push    %edx
    7e4f: 52                           	pushl	%edx
;     push    %ebx
    7e50: 53                           	pushl	%ebx
;     push    %esi
    7e51: 56                           	pushl	%esi
;     push    %edi
    7e52: 57                           	pushl	%edi
;     movb    8(%ebp), %al                # arguments start from offset +8
    7e53: 8a 45 08                     	movb	0x8(%ebp), %al
;     movb    %al, .Lirq                  # load irq number
    7e56: a2 db 7e 00 00               	movb	%al, 0x7edb
;     mov     12(%ebp), %edx              # load stuct pointer
    7e5b: 8b 55 0c                     	movl	0xc(%ebp), %edx
;     push    %ebp                        # store base pointer for later use
    7e5e: 55                           	pushl	%ebp
;     movw    (%edx), %ax                 # load registers
    7e5f: 66 8b 02                     	movw	(%edx), %ax
;     movw    %ax, .Lax
    7e62: 66 a3 d8 7e 00 00            	movw	%ax, 0x7ed8
;     movw    4(%edx), %ax
    7e68: 66 8b 42 04                  	movw	0x4(%edx), %ax
;     movw    %ax, .Lbx
    7e6c: 66 a3 b5 7e 00 00            	movw	%ax, 0x7eb5
;     movw    8(%edx), %ax
    7e72: 66 8b 42 08                  	movw	0x8(%edx), %ax
;     movw    %ax, .Lcx
    7e76: 66 a3 ba 7e 00 00            	movw	%ax, 0x7eba
;     movw    12(%edx), %ax
    7e7c: 66 8b 42 0c                  	movw	0xc(%edx), %ax
;     movw    %ax, .Ldx
    7e80: 66 a3 bf 7e 00 00            	movw	%ax, 0x7ebf
;     movw    16(%edx), %ax
    7e86: 66 8b 42 10                  	movw	0x10(%edx), %ax
;     movw    %ax, .Lsi
    7e8a: 66 a3 c4 7e 00 00            	movw	%ax, 0x7ec4
;     movw    20(%edx), %ax
    7e90: 66 8b 42 14                  	movw	0x14(%edx), %ax
;     movw    %ax, .Ldi
    7e94: 66 a3 c9 7e 00 00            	movw	%ax, 0x7ec9
;     movw    28(%edx), %ax
    7e9a: 66 8b 42 1c                  	movw	0x1c(%edx), %ax
;     movw    %ax, .Les
    7e9e: 66 a3 ce 7e 00 00            	movw	%ax, 0x7ece
;     movw    32(%edx), %ax
    7ea4: 66 8b 42 20                  	movw	0x20(%edx), %ax
;     movw    %ax, .Lds
    7ea8: 66 a3 d3 7e 00 00            	movw	%ax, 0x7ed3
;     call    switch_prot_to_real         # switch to real mode
    7eae: e8 93 06 00 00               	calll	0x8546 <switch_prot_to_real>
;     sti
    7eb3: fb                           	sti
    7eb4: b8 00 00 89 c3               	movl	$0xc3890000, %eax       # imm = 0xC3890000
;     mov     %ax, %bx                    # move to proper register
    7eb9: b8 00 00 89 c1               	movl	$0xc1890000, %eax       # imm = 0xC1890000
;     mov     %ax, %cx
    7ebe: b8 00 00 89 c2               	movl	$0xc2890000, %eax       # imm = 0xC2890000
;     mov     %ax, %dx
    7ec3: b8 00 00 89 c6               	movl	$0xc6890000, %eax       # imm = 0xC6890000
;     mov     %ax, %si
    7ec8: b8 00 00 89 c7               	movl	$0xc7890000, %eax       # imm = 0xC7890000
;     mov     %ax, %di
    7ecd: b8 00 00 8e c0               	movl	$0xc08e0000, %eax       # imm = 0xC08E0000
;     mov     %ax, %es
    7ed2: b8 00 00 8e d8               	movl	$0xd88e0000, %eax       # imm = 0xD88E0000
;     mov     %ax, %ds
    7ed7: b8 00 00 cd 00               	movl	$0xcd0000, %eax         # imm = 0xCD0000
;     mov     %ax, .Lax                   # store registers temporarily
    7edc: a3 d8 7e 89 1e               	movl	%eax, 0x1e897ed8
;     mov     %bx, .Lbx
    7ee1: b5 7e                        	movb	$0x7e, %ch
;     mov     %cx, .Lcx
    7ee3: 89 0e                        	movl	%ecx, (%esi)
    7ee5: ba 7e 89 16 bf               	movl	$0xbf16897e, %edx       # imm = 0xBF16897E
;     mov     %dx, .Ldx
    7eea: 7e 89                        	jle	0x7e75 <_pc_bios_call+0x2b>
;     mov     %si, .Lsi
    7eec: 36 c4 7e 89                  	lesl	%ss:-0x77(%esi), %edi
;     mov     %di, .Ldi
    7ef0: 3e c9                        	leave
    7ef2: 7e e8                        	jle	0x7edc <_pc_bios_call+0x92>
;     call    switch_real_to_prot         # switch back to protected mode
    7ef4: 06                           	pushl	%es
    7ef5: 06                           	pushl	%es
;     pop     %ebp                        # restore stack base pointer
    7ef6: 5d                           	popl	%ebp
;     mov     12(%ebp), %edx              # load stuct pointer
    7ef7: 8b 55 0c                     	movl	0xc(%ebp), %edx
;     movw    .Lax, %ax                   # store registers
    7efa: 66 a1 d8 7e 00 00            	movw	0x7ed8, %ax
;     movw    %ax, (%edx)
    7f00: 66 89 02                     	movw	%ax, (%edx)
;     movw    .Lbx, %ax
    7f03: 66 a1 b5 7e 00 00            	movw	0x7eb5, %ax
;     movw    %ax, 4(%edx)
    7f09: 66 89 42 04                  	movw	%ax, 0x4(%edx)
;     movw    .Lcx, %ax
    7f0d: 66 a1 ba 7e 00 00            	movw	0x7eba, %ax
;     movw    %ax, 8(%edx)
    7f13: 66 89 42 08                  	movw	%ax, 0x8(%edx)
;     movw    .Ldx, %ax
    7f17: 66 a1 bf 7e 00 00            	movw	0x7ebf, %ax
;     movw    %ax, 12(%edx)
    7f1d: 66 89 42 0c                  	movw	%ax, 0xc(%edx)
;     movw    .Lsi, %ax
    7f21: 66 a1 c4 7e 00 00            	movw	0x7ec4, %ax
;     movw    %ax, 16(%edx)
    7f27: 66 89 42 10                  	movw	%ax, 0x10(%edx)
;     movw    .Ldi, %ax
    7f2b: 66 a1 c9 7e 00 00            	movw	0x7ec9, %ax
;     movw    %ax, 20(%edx)
    7f31: 66 89 42 14                  	movw	%ax, 0x14(%edx)
;     pop     %edi                        # pop registers
    7f35: 5f                           	popl	%edi
;     pop     %esi
    7f36: 5e                           	popl	%esi
;     pop     %ebx
    7f37: 5b                           	popl	%ebx
;     pop     %edx
    7f38: 5a                           	popl	%edx
;     pop     %ecx
    7f39: 59                           	popl	%ecx
;     pop     %eax
    7f3a: 58                           	popl	%eax
;     pop     %ebp                        # restore base pointer
    7f3b: 5d                           	popl	%ebp
;     ret
    7f3c: c3                           	retl

00007f3d <_pc_bios_reset_drive>:
; {
    7f3d: 55                           	pushl	%ebp
    7f3e: 89 e5                        	movl	%esp, %ebp
    7f40: 83 ec 48                     	subl	$0x48, %esp
    7f43: 8b 45 08                     	movl	0x8(%ebp), %eax
    7f46: 88 45 d4                     	movb	%al, -0x2c(%ebp)
;     struct bioscall_regs regs = {
    7f49: ba 00 00 00 00               	movl	$0x0, %edx
    7f4e: b8 20 00 00 00               	movl	$0x20, %eax
    7f53: 83 e0 f8                     	andl	$-0x8, %eax
    7f56: 89 c1                        	movl	%eax, %ecx
    7f58: b8 00 00 00 00               	movl	$0x0, %eax
    7f5d: 89 54 05 d8                  	movl	%edx, -0x28(%ebp,%eax)
    7f61: 89 54 05 dc                  	movl	%edx, -0x24(%ebp,%eax)
    7f65: 83 c0 08                     	addl	$0x8, %eax
    7f68: 39 c8                        	cmpl	%ecx, %eax
    7f6a: 72 f1                        	jb	0x7f5d <_pc_bios_reset_drive+0x20>
    7f6c: 0f b6 45 d4                  	movzbl	-0x2c(%ebp), %eax
    7f70: 88 45 e4                     	movb	%al, -0x1c(%ebp)
;     return _pc_bios_call(0x13, &regs) ? regs.a.b.h : 0;
    7f73: 8d 45 d8                     	leal	-0x28(%ebp), %eax
    7f76: 89 44 24 04                  	movl	%eax, 0x4(%esp)
    7f7a: c7 04 24 13 00 00 00         	movl	$0x13, (%esp)
    7f81: e8 c4 fe ff ff               	calll	0x7e4a <_pc_bios_call>
    7f86: 85 c0                        	testl	%eax, %eax
    7f88: 74 09                        	je	0x7f93 <_pc_bios_reset_drive+0x56>
    7f8a: 0f b6 45 d9                  	movzbl	-0x27(%ebp), %eax
    7f8e: 0f b6 c0                     	movzbl	%al, %eax
    7f91: eb 05                        	jmp	0x7f98 <_pc_bios_reset_drive+0x5b>
    7f93: b8 00 00 00 00               	movl	$0x0, %eax
; }
    7f98: 89 ec                        	movl	%ebp, %esp
    7f9a: 5d                           	popl	%ebp
    7f9b: c3                           	retl

00007f9c <_pc_bios_read_drive_chs>:
; {
    7f9c: 55                           	pushl	%ebp
    7f9d: 89 e5                        	movl	%esp, %ebp
    7f9f: 83 ec 48                     	subl	$0x48, %esp
    7fa2: 8b 45 08                     	movl	0x8(%ebp), %eax
    7fa5: 8b 55 18                     	movl	0x18(%ebp), %edx
    7fa8: 88 45 d4                     	movb	%al, -0x2c(%ebp)
    7fab: 88 d0                        	movb	%dl, %al
    7fad: 88 45 d0                     	movb	%al, -0x30(%ebp)
;     struct bioscall_regs regs = {
    7fb0: ba 00 00 00 00               	movl	$0x0, %edx
    7fb5: b8 20 00 00 00               	movl	$0x20, %eax
    7fba: 83 e0 f8                     	andl	$-0x8, %eax
    7fbd: 89 c1                        	movl	%eax, %ecx
    7fbf: b8 00 00 00 00               	movl	$0x0, %eax
    7fc4: 89 54 05 d8                  	movl	%edx, -0x28(%ebp,%eax)
    7fc8: 89 54 05 dc                  	movl	%edx, -0x24(%ebp,%eax)
    7fcc: 83 c0 08                     	addl	$0x8, %eax
    7fcf: 39 c8                        	cmpl	%ecx, %eax
    7fd1: 72 f1                        	jb	0x7fc4 <_pc_bios_read_drive_chs+0x28>
    7fd3: 0f b6 45 d0                  	movzbl	-0x30(%ebp), %eax
    7fd7: 88 45 d8                     	movb	%al, -0x28(%ebp)
    7fda: c6 45 d9 02                  	movb	$0x2, -0x27(%ebp)
;         .b.w = (uint32_t)buf & 0x000F,
    7fde: 8b 45 1c                     	movl	0x1c(%ebp), %eax
    7fe1: 0f b7 c0                     	movzwl	%ax, %eax
    7fe4: 83 e0 0f                     	andl	$0xf, %eax
    7fe7: 0f b7 c0                     	movzwl	%ax, %eax
;     struct bioscall_regs regs = {
    7fea: 66 89 45 dc                  	movw	%ax, -0x24(%ebp)
;         .c.b.l = (((chs.cylinder >> 8) & 0x3) << 6) | (chs.sector & 0x3F),
    7fee: 8b 45 0c                     	movl	0xc(%ebp), %eax
    7ff1: c1 f8 08                     	sarl	$0x8, %eax
    7ff4: c0 e0 06                     	shlb	$0x6, %al
    7ff7: 88 c2                        	movb	%al, %dl
    7ff9: 8b 45 14                     	movl	0x14(%ebp), %eax
    7ffc: 24 3f                        	andb	$0x3f, %al
    7ffe: 08 d0                        	orb	%dl, %al
;     struct bioscall_regs regs = {
    8000: 88 45 e0                     	movb	%al, -0x20(%ebp)
;         .c.b.h = chs.cylinder & 0xFF,
    8003: 8b 45 0c                     	movl	0xc(%ebp), %eax
;     struct bioscall_regs regs = {
    8006: 88 45 e1                     	movb	%al, -0x1f(%ebp)
    8009: 0f b6 45 d4                  	movzbl	-0x2c(%ebp), %eax
    800d: 88 45 e4                     	movb	%al, -0x1c(%ebp)
;         .d.b.h = chs.head,
    8010: 8b 45 10                     	movl	0x10(%ebp), %eax
;     struct bioscall_regs regs = {
    8013: 88 45 e5                     	movb	%al, -0x1b(%ebp)
;         .es.w = ((uint32_t)buf >> 4) & 0xFFFF,
    8016: 8b 45 1c                     	movl	0x1c(%ebp), %eax
    8019: c1 e8 04                     	shrl	$0x4, %eax
;     struct bioscall_regs regs = {
    801c: 0f b7 c0                     	movzwl	%ax, %eax
    801f: 66 89 45 f4                  	movw	%ax, -0xc(%ebp)
;     return _pc_bios_call(0x13, &regs) ? -(regs.a.b.h) : regs.a.b.l;
    8023: 8d 45 d8                     	leal	-0x28(%ebp), %eax
    8026: 89 44 24 04                  	movl	%eax, 0x4(%esp)
    802a: c7 04 24 13 00 00 00         	movl	$0x13, (%esp)
    8031: e8 14 fe ff ff               	calll	0x7e4a <_pc_bios_call>
    8036: 85 c0                        	testl	%eax, %eax
    8038: 74 0b                        	je	0x8045 <_pc_bios_read_drive_chs+0xa9>
    803a: 0f b6 45 d9                  	movzbl	-0x27(%ebp), %eax
    803e: 0f b6 c0                     	movzbl	%al, %eax
    8041: f7 d8                        	negl	%eax
    8043: eb 07                        	jmp	0x804c <_pc_bios_read_drive_chs+0xb0>
    8045: 0f b6 45 d8                  	movzbl	-0x28(%ebp), %eax
    8049: 0f b6 c0                     	movzbl	%al, %eax
; }
    804c: 89 ec                        	movl	%ebp, %esp
    804e: 5d                           	popl	%ebp
    804f: c3                           	retl

00008050 <print_hex_byte>:
; {
    8050: 55                           	pushl	%ebp
    8051: 89 e5                        	movl	%esp, %ebp
    8053: 83 ec 28                     	subl	$0x28, %esp
    8056: 8b 45 08                     	movl	0x8(%ebp), %eax
    8059: 88 45 f4                     	movb	%al, -0xc(%ebp)
;     _pc_bios_tty_output(hex_chars[value >> 4]);
    805c: 0f b6 45 f4                  	movzbl	-0xc(%ebp), %eax
    8060: c0 e8 04                     	shrb	$0x4, %al
    8063: 0f b6 c0                     	movzbl	%al, %eax
    8066: 0f b6 80 9c 86 00 00         	movzbl	0x869c(%eax), %eax
    806d: 0f b6 c0                     	movzbl	%al, %eax
    8070: 89 04 24                     	movl	%eax, (%esp)
    8073: e8 38 03 00 00               	calll	0x83b0 <_pc_bios_tty_output>
;     _pc_bios_tty_output(hex_chars[value & 0xF]);
    8078: 0f b6 45 f4                  	movzbl	-0xc(%ebp), %eax
    807c: 83 e0 0f                     	andl	$0xf, %eax
    807f: 0f b6 80 9c 86 00 00         	movzbl	0x869c(%eax), %eax
    8086: 0f b6 c0                     	movzbl	%al, %eax
    8089: 89 04 24                     	movl	%eax, (%esp)
    808c: e8 1f 03 00 00               	calll	0x83b0 <_pc_bios_tty_output>
; }
    8091: 90                           	nop
    8092: 89 ec                        	movl	%ebp, %esp
    8094: 5d                           	popl	%ebp
    8095: c3                           	retl

00008096 <print_hex_dword>:
; {
    8096: 55                           	pushl	%ebp
    8097: 89 e5                        	movl	%esp, %ebp
    8099: 83 ec 18                     	subl	$0x18, %esp
;     print_hex_byte(value >> 24);
    809c: 8b 45 08                     	movl	0x8(%ebp), %eax
    809f: c1 e8 18                     	shrl	$0x18, %eax
    80a2: 0f b6 c0                     	movzbl	%al, %eax
    80a5: 89 04 24                     	movl	%eax, (%esp)
    80a8: e8 a3 ff ff ff               	calll	0x8050 <print_hex_byte>
;     _pc_bios_tty_output(' ');
    80ad: c7 04 24 20 00 00 00         	movl	$0x20, (%esp)
    80b4: e8 f7 02 00 00               	calll	0x83b0 <_pc_bios_tty_output>
;     print_hex_byte(value >> 16);
    80b9: 8b 45 08                     	movl	0x8(%ebp), %eax
    80bc: c1 e8 10                     	shrl	$0x10, %eax
    80bf: 0f b6 c0                     	movzbl	%al, %eax
    80c2: 89 04 24                     	movl	%eax, (%esp)
    80c5: e8 86 ff ff ff               	calll	0x8050 <print_hex_byte>
;     _pc_bios_tty_output(' ');
    80ca: c7 04 24 20 00 00 00         	movl	$0x20, (%esp)
    80d1: e8 da 02 00 00               	calll	0x83b0 <_pc_bios_tty_output>
;     print_hex_byte(value >> 8);
    80d6: 8b 45 08                     	movl	0x8(%ebp), %eax
    80d9: c1 e8 08                     	shrl	$0x8, %eax
    80dc: 0f b6 c0                     	movzbl	%al, %eax
    80df: 89 04 24                     	movl	%eax, (%esp)
    80e2: e8 69 ff ff ff               	calll	0x8050 <print_hex_byte>
;     _pc_bios_tty_output(' ');
    80e7: c7 04 24 20 00 00 00         	movl	$0x20, (%esp)
    80ee: e8 bd 02 00 00               	calll	0x83b0 <_pc_bios_tty_output>
;     print_hex_byte(value);
    80f3: 8b 45 08                     	movl	0x8(%ebp), %eax
    80f6: 0f b6 c0                     	movzbl	%al, %eax
    80f9: 89 04 24                     	movl	%eax, (%esp)
    80fc: e8 4f ff ff ff               	calll	0x8050 <print_hex_byte>
; }
    8101: 90                           	nop
    8102: 89 ec                        	movl	%ebp, %esp
    8104: 5d                           	popl	%ebp
    8105: c3                           	retl

00008106 <_pc_init>:
; {
    8106: 55                           	pushl	%ebp
    8107: 89 e5                        	movl	%esp, %ebp
    8109: 83 ec 68                     	subl	$0x68, %esp
    810c: 89 5d fc                     	movl	%ebx, -0x4(%ebp)
;     const char str[] = "Hello, World!\r\n";
    810f: c7 45 d0 48 65 6c 6c         	movl	$0x6c6c6548, -0x30(%ebp) # imm = 0x6C6C6548
    8116: c7 45 d4 6f 2c 20 57         	movl	$0x57202c6f, -0x2c(%ebp) # imm = 0x57202C6F
    811d: c7 45 d8 6f 72 6c 64         	movl	$0x646c726f, -0x28(%ebp) # imm = 0x646C726F
    8124: c7 45 dc 21 0d 0a 00         	movl	$0xa0d21, -0x24(%ebp)   # imm = 0xA0D21
;     for (int i = 0; str[i]; i++) {
    812b: c7 45 f4 00 00 00 00         	movl	$0x0, -0xc(%ebp)
    8132: eb 19                        	jmp	0x814d <_pc_init+0x47>
;         _pc_bios_tty_output(str[i]);
    8134: 8d 55 d0                     	leal	-0x30(%ebp), %edx
    8137: 8b 45 f4                     	movl	-0xc(%ebp), %eax
    813a: 01 d0                        	addl	%edx, %eax
    813c: 0f b6 00                     	movzbl	(%eax), %eax
    813f: 0f b6 c0                     	movzbl	%al, %eax
    8142: 89 04 24                     	movl	%eax, (%esp)
    8145: e8 66 02 00 00               	calll	0x83b0 <_pc_bios_tty_output>
;     for (int i = 0; str[i]; i++) {
    814a: ff 45 f4                     	incl	-0xc(%ebp)
    814d: 8d 55 d0                     	leal	-0x30(%ebp), %edx
    8150: 8b 45 f4                     	movl	-0xc(%ebp), %eax
    8153: 01 d0                        	addl	%edx, %eax
    8155: 0f b6 00                     	movzbl	(%eax), %eax
    8158: 84 c0                        	testb	%al, %al
    815a: 75 d8                        	jne	0x8134 <_pc_init+0x2e>
;     _pc_bios_read_drive_chs(_pc_boot_drive, (struct chs){ 0, 0, 1 }, 18, (void*)0x10000);
    815c: c7 45 c4 00 00 00 00         	movl	$0x0, -0x3c(%ebp)
    8163: c7 45 c8 00 00 00 00         	movl	$0x0, -0x38(%ebp)
    816a: c7 45 cc 01 00 00 00         	movl	$0x1, -0x34(%ebp)
    8171: 0f b6 05 00 08 00 00         	movzbl	0x800, %eax
    8178: 0f b6 c0                     	movzbl	%al, %eax
    817b: c7 44 24 14 00 00 01 00      	movl	$0x10000, 0x14(%esp)    # imm = 0x10000
    8183: c7 44 24 10 12 00 00 00      	movl	$0x12, 0x10(%esp)
    818b: 8b 55 c4                     	movl	-0x3c(%ebp), %edx
    818e: 89 54 24 04                  	movl	%edx, 0x4(%esp)
    8192: 8b 55 c8                     	movl	-0x38(%ebp), %edx
    8195: 89 54 24 08                  	movl	%edx, 0x8(%esp)
    8199: 8b 55 cc                     	movl	-0x34(%ebp), %edx
    819c: 89 54 24 0c                  	movl	%edx, 0xc(%esp)
    81a0: 89 04 24                     	movl	%eax, (%esp)
    81a3: e8 f4 fd ff ff               	calll	0x7f9c <_pc_bios_read_drive_chs>
;     for (int bus = 0; bus < 256; bus++) {
    81a8: c7 45 f0 00 00 00 00         	movl	$0x0, -0x10(%ebp)
    81af: e9 92 00 00 00               	jmp	0x8246 <_pc_init+0x140>
;         for (int device = 0; device < 32; device++) {
    81b4: c7 45 ec 00 00 00 00         	movl	$0x0, -0x14(%ebp)
    81bb: eb 7c                        	jmp	0x8239 <_pc_init+0x133>
;             for (int function = 0; function < 8; function++) {
    81bd: c7 45 e8 00 00 00 00         	movl	$0x0, -0x18(%ebp)
    81c4: eb 6a                        	jmp	0x8230 <_pc_init+0x12a>
;                 for (int offset = 0; offset < 256; offset++) {
    81c6: c7 45 e4 00 00 00 00         	movl	$0x0, -0x1c(%ebp)
    81cd: eb 49                        	jmp	0x8218 <_pc_init+0x112>
;                     uint32_t value = _pc_pci_cfg_read(bus, device, function, offset);
    81cf: 8b 45 e4                     	movl	-0x1c(%ebp), %eax
    81d2: 0f b6 d8                     	movzbl	%al, %ebx
    81d5: 8b 45 e8                     	movl	-0x18(%ebp), %eax
    81d8: 0f b6 c8                     	movzbl	%al, %ecx
    81db: 8b 45 ec                     	movl	-0x14(%ebp), %eax
    81de: 0f b6 d0                     	movzbl	%al, %edx
    81e1: 8b 45 f0                     	movl	-0x10(%ebp), %eax
    81e4: 0f b6 c0                     	movzbl	%al, %eax
    81e7: 89 5c 24 0c                  	movl	%ebx, 0xc(%esp)
    81eb: 89 4c 24 08                  	movl	%ecx, 0x8(%esp)
    81ef: 89 54 24 04                  	movl	%edx, 0x4(%esp)
    81f3: 89 04 24                     	movl	%eax, (%esp)
    81f6: e8 07 02 00 00               	calll	0x8402 <_pc_pci_cfg_read>
    81fb: 89 45 e0                     	movl	%eax, -0x20(%ebp)
;                     print_hex_dword(value);
    81fe: 8b 45 e0                     	movl	-0x20(%ebp), %eax
    8201: 89 04 24                     	movl	%eax, (%esp)
    8204: e8 8d fe ff ff               	calll	0x8096 <print_hex_dword>
;                     _pc_bios_tty_output('\n');
    8209: c7 04 24 0a 00 00 00         	movl	$0xa, (%esp)
    8210: e8 9b 01 00 00               	calll	0x83b0 <_pc_bios_tty_output>
;                 for (int offset = 0; offset < 256; offset++) {
    8215: ff 45 e4                     	incl	-0x1c(%ebp)
    8218: 81 7d e4 ff 00 00 00         	cmpl	$0xff, -0x1c(%ebp)
    821f: 7e ae                        	jle	0x81cf <_pc_init+0xc9>
;                 _pc_bios_tty_output('\n');
    8221: c7 04 24 0a 00 00 00         	movl	$0xa, (%esp)
    8228: e8 83 01 00 00               	calll	0x83b0 <_pc_bios_tty_output>
;             for (int function = 0; function < 8; function++) {
    822d: ff 45 e8                     	incl	-0x18(%ebp)
    8230: 83 7d e8 07                  	cmpl	$0x7, -0x18(%ebp)
    8234: 7e 90                        	jle	0x81c6 <_pc_init+0xc0>
;         for (int device = 0; device < 32; device++) {
    8236: ff 45 ec                     	incl	-0x14(%ebp)
    8239: 83 7d ec 1f                  	cmpl	$0x1f, -0x14(%ebp)
    823d: 0f 8e 7a ff ff ff            	jle	0x81bd <_pc_init+0xb7>
;     for (int bus = 0; bus < 256; bus++) {
    8243: ff 45 f0                     	incl	-0x10(%ebp)
    8246: 81 7d f0 ff 00 00 00         	cmpl	$0xff, -0x10(%ebp)
    824d: 0f 8e 61 ff ff ff            	jle	0x81b4 <_pc_init+0xae>
;         _pc_bios_read_keyboard(NULL, &ch);
    8253: 8d 45 c3                     	leal	-0x3d(%ebp), %eax
    8256: 89 44 24 04                  	movl	%eax, 0x4(%esp)
    825a: c7 04 24 00 00 00 00         	movl	$0x0, (%esp)
    8261: e8 25 00 00 00               	calll	0x828b <_pc_bios_read_keyboard>
;         if (ch == '\r') {
    8266: 0f b6 45 c3                  	movzbl	-0x3d(%ebp), %eax
    826a: 3c 0d                        	cmpb	$0xd, %al
    826c: 75 0c                        	jne	0x827a <_pc_init+0x174>
;             _pc_bios_tty_output('\n');
    826e: c7 04 24 0a 00 00 00         	movl	$0xa, (%esp)
    8275: e8 36 01 00 00               	calll	0x83b0 <_pc_bios_tty_output>
;         _pc_bios_tty_output(ch);
    827a: 0f b6 45 c3                  	movzbl	-0x3d(%ebp), %eax
    827e: 0f b6 c0                     	movzbl	%al, %eax
    8281: 89 04 24                     	movl	%eax, (%esp)
    8284: e8 27 01 00 00               	calll	0x83b0 <_pc_bios_tty_output>
;     for (;;) {
    8289: eb c8                        	jmp	0x8253 <_pc_init+0x14d>

0000828b <_pc_bios_read_keyboard>:
; {
    828b: 55                           	pushl	%ebp
    828c: 89 e5                        	movl	%esp, %ebp
    828e: 83 ec 38                     	subl	$0x38, %esp
;     struct bioscall_regs regs = {
    8291: ba 00 00 00 00               	movl	$0x0, %edx
    8296: b8 20 00 00 00               	movl	$0x20, %eax
    829b: 83 e0 f8                     	andl	$-0x8, %eax
    829e: 89 c1                        	movl	%eax, %ecx
    82a0: b8 00 00 00 00               	movl	$0x0, %eax
    82a5: 89 54 05 d8                  	movl	%edx, -0x28(%ebp,%eax)
    82a9: 89 54 05 dc                  	movl	%edx, -0x24(%ebp,%eax)
    82ad: 83 c0 08                     	addl	$0x8, %eax
    82b0: 39 c8                        	cmpl	%ecx, %eax
    82b2: 72 f1                        	jb	0x82a5 <_pc_bios_read_keyboard+0x1a>
    82b4: c6 45 d9 10                  	movb	$0x10, -0x27(%ebp)
;     _pc_bios_call(0x16, &regs);
    82b8: 8d 45 d8                     	leal	-0x28(%ebp), %eax
    82bb: 89 44 24 04                  	movl	%eax, 0x4(%esp)
    82bf: c7 04 24 16 00 00 00         	movl	$0x16, (%esp)
    82c6: e8 7f fb ff ff               	calll	0x7e4a <_pc_bios_call>
;     if (scancode) *scancode = regs.a.b.h;
    82cb: 83 7d 08 00                  	cmpl	$0x0, 0x8(%ebp)
    82cf: 74 09                        	je	0x82da <_pc_bios_read_keyboard+0x4f>
    82d1: 0f b6 55 d9                  	movzbl	-0x27(%ebp), %edx
    82d5: 8b 45 08                     	movl	0x8(%ebp), %eax
    82d8: 88 10                        	movb	%dl, (%eax)
;     if (ascii) *ascii = regs.a.b.l;
    82da: 83 7d 0c 00                  	cmpl	$0x0, 0xc(%ebp)
    82de: 74 0b                        	je	0x82eb <_pc_bios_read_keyboard+0x60>
    82e0: 0f b6 45 d8                  	movzbl	-0x28(%ebp), %eax
    82e4: 88 c2                        	movb	%al, %dl
    82e6: 8b 45 0c                     	movl	0xc(%ebp), %eax
    82e9: 88 10                        	movb	%dl, (%eax)
; }
    82eb: 90                           	nop
    82ec: 89 ec                        	movl	%ebp, %esp
    82ee: 5d                           	popl	%ebp
    82ef: c3                           	retl

000082f0 <_pc_bios_read_keyboard_nowait>:
; {
    82f0: 55                           	pushl	%ebp
    82f1: 89 e5                        	movl	%esp, %ebp
    82f3: 83 ec 38                     	subl	$0x38, %esp
;     struct bioscall_regs regs = {
    82f6: ba 00 00 00 00               	movl	$0x0, %edx
    82fb: b8 20 00 00 00               	movl	$0x20, %eax
    8300: 83 e0 f8                     	andl	$-0x8, %eax
    8303: 89 c1                        	movl	%eax, %ecx
    8305: b8 00 00 00 00               	movl	$0x0, %eax
    830a: 89 54 05 d8                  	movl	%edx, -0x28(%ebp,%eax)
    830e: 89 54 05 dc                  	movl	%edx, -0x24(%ebp,%eax)
    8312: 83 c0 08                     	addl	$0x8, %eax
    8315: 39 c8                        	cmpl	%ecx, %eax
    8317: 72 f1                        	jb	0x830a <_pc_bios_read_keyboard_nowait+0x1a>
    8319: c6 45 d9 11                  	movb	$0x11, -0x27(%ebp)
;     _pc_bios_call(0x16, &regs);
    831d: 8d 45 d8                     	leal	-0x28(%ebp), %eax
    8320: 89 44 24 04                  	movl	%eax, 0x4(%esp)
    8324: c7 04 24 16 00 00 00         	movl	$0x16, (%esp)
    832b: e8 1a fb ff ff               	calll	0x7e4a <_pc_bios_call>
;     if (!regs.a.w) return 1;
    8330: 0f b7 45 d8                  	movzwl	-0x28(%ebp), %eax
    8334: 85 c0                        	testl	%eax, %eax
    8336: 75 07                        	jne	0x833f <_pc_bios_read_keyboard_nowait+0x4f>
    8338: b8 01 00 00 00               	movl	$0x1, %eax
    833d: eb 25                        	jmp	0x8364 <_pc_bios_read_keyboard_nowait+0x74>
;     if (scancode) *scancode = regs.a.b.h;
    833f: 83 7d 08 00                  	cmpl	$0x0, 0x8(%ebp)
    8343: 74 09                        	je	0x834e <_pc_bios_read_keyboard_nowait+0x5e>
    8345: 0f b6 55 d9                  	movzbl	-0x27(%ebp), %edx
    8349: 8b 45 08                     	movl	0x8(%ebp), %eax
    834c: 88 10                        	movb	%dl, (%eax)
;     if (ascii) *ascii = regs.a.b.l;
    834e: 83 7d 0c 00                  	cmpl	$0x0, 0xc(%ebp)
    8352: 74 0b                        	je	0x835f <_pc_bios_read_keyboard_nowait+0x6f>
    8354: 0f b6 45 d8                  	movzbl	-0x28(%ebp), %eax
    8358: 88 c2                        	movb	%al, %dl
    835a: 8b 45 0c                     	movl	0xc(%ebp), %eax
    835d: 88 10                        	movb	%dl, (%eax)
;     return 0;
    835f: b8 00 00 00 00               	movl	$0x0, %eax
; }
    8364: 89 ec                        	movl	%ebp, %esp
    8366: 5d                           	popl	%ebp
    8367: c3                           	retl

00008368 <_pc_bios_read_keyboard_flags>:
; {
    8368: 55                           	pushl	%ebp
    8369: 89 e5                        	movl	%esp, %ebp
    836b: 83 ec 38                     	subl	$0x38, %esp
;     struct bioscall_regs regs = {
    836e: ba 00 00 00 00               	movl	$0x0, %edx
    8373: b8 20 00 00 00               	movl	$0x20, %eax
    8378: 83 e0 f8                     	andl	$-0x8, %eax
    837b: 89 c1                        	movl	%eax, %ecx
    837d: b8 00 00 00 00               	movl	$0x0, %eax
    8382: 89 54 05 d8                  	movl	%edx, -0x28(%ebp,%eax)
    8386: 89 54 05 dc                  	movl	%edx, -0x24(%ebp,%eax)
    838a: 83 c0 08                     	addl	$0x8, %eax
    838d: 39 c8                        	cmpl	%ecx, %eax
    838f: 72 f1                        	jb	0x8382 <_pc_bios_read_keyboard_flags+0x1a>
    8391: c6 45 d9 12                  	movb	$0x12, -0x27(%ebp)
;     _pc_bios_call(0x16, &regs);
    8395: 8d 45 d8                     	leal	-0x28(%ebp), %eax
    8398: 89 44 24 04                  	movl	%eax, 0x4(%esp)
    839c: c7 04 24 16 00 00 00         	movl	$0x16, (%esp)
    83a3: e8 a2 fa ff ff               	calll	0x7e4a <_pc_bios_call>
;     return regs.a.w;
    83a8: 0f b7 45 d8                  	movzwl	-0x28(%ebp), %eax
; }
    83ac: 89 ec                        	movl	%ebp, %esp
    83ae: 5d                           	popl	%ebp
    83af: c3                           	retl

000083b0 <_pc_bios_tty_output>:
; {
    83b0: 55                           	pushl	%ebp
    83b1: 89 e5                        	movl	%esp, %ebp
    83b3: 83 ec 48                     	subl	$0x48, %esp
    83b6: 8b 45 08                     	movl	0x8(%ebp), %eax
    83b9: 88 45 d4                     	movb	%al, -0x2c(%ebp)
;     struct bioscall_regs regs = {
    83bc: ba 00 00 00 00               	movl	$0x0, %edx
    83c1: b8 20 00 00 00               	movl	$0x20, %eax
    83c6: 83 e0 f8                     	andl	$-0x8, %eax
    83c9: 89 c1                        	movl	%eax, %ecx
    83cb: b8 00 00 00 00               	movl	$0x0, %eax
    83d0: 89 54 05 d8                  	movl	%edx, -0x28(%ebp,%eax)
    83d4: 89 54 05 dc                  	movl	%edx, -0x24(%ebp,%eax)
    83d8: 83 c0 08                     	addl	$0x8, %eax
    83db: 39 c8                        	cmpl	%ecx, %eax
    83dd: 72 f1                        	jb	0x83d0 <_pc_bios_tty_output+0x20>
    83df: 0f b6 45 d4                  	movzbl	-0x2c(%ebp), %eax
    83e3: 88 45 d8                     	movb	%al, -0x28(%ebp)
    83e6: c6 45 d9 0e                  	movb	$0xe, -0x27(%ebp)
;     _pc_bios_call(0x10, &regs);
    83ea: 8d 45 d8                     	leal	-0x28(%ebp), %eax
    83ed: 89 44 24 04                  	movl	%eax, 0x4(%esp)
    83f1: c7 04 24 10 00 00 00         	movl	$0x10, (%esp)
    83f8: e8 4d fa ff ff               	calll	0x7e4a <_pc_bios_call>
; }
    83fd: 90                           	nop
    83fe: 89 ec                        	movl	%ebp, %esp
    8400: 5d                           	popl	%ebp
    8401: c3                           	retl

00008402 <_pc_pci_cfg_read>:
; {
    8402: 55                           	pushl	%ebp
    8403: 89 e5                        	movl	%esp, %ebp
    8405: 83 ec 38                     	subl	$0x38, %esp
    8408: 89 5d fc                     	movl	%ebx, -0x4(%ebp)
    840b: 8b 45 08                     	movl	0x8(%ebp), %eax
    840e: 8b 5d 0c                     	movl	0xc(%ebp), %ebx
    8411: 8b 4d 10                     	movl	0x10(%ebp), %ecx
    8414: 8b 55 14                     	movl	0x14(%ebp), %edx
    8417: 88 45 e4                     	movb	%al, -0x1c(%ebp)
    841a: 88 d8                        	movb	%bl, %al
    841c: 88 45 e0                     	movb	%al, -0x20(%ebp)
    841f: 88 c8                        	movb	%cl, %al
    8421: 88 45 dc                     	movb	%al, -0x24(%ebp)
    8424: 88 d0                        	movb	%dl, %al
    8426: 88 45 d8                     	movb	%al, -0x28(%ebp)
;     uint32_t address = 0x80000000 | ((bus << 16) | (device << 11) | (function << 8) | offset);
    8429: 0f b6 45 e4                  	movzbl	-0x1c(%ebp), %eax
    842d: c1 e0 10                     	shll	$0x10, %eax
    8430: 89 c2                        	movl	%eax, %edx
    8432: 0f b6 45 e0                  	movzbl	-0x20(%ebp), %eax
    8436: c1 e0 0b                     	shll	$0xb, %eax
    8439: 09 c2                        	orl	%eax, %edx
    843b: 0f b6 45 dc                  	movzbl	-0x24(%ebp), %eax
    843f: c1 e0 08                     	shll	$0x8, %eax
    8442: 09 c2                        	orl	%eax, %edx
    8444: 0f b6 45 d8                  	movzbl	-0x28(%ebp), %eax
    8448: 09 d0                        	orl	%edx, %eax
    844a: 0d 00 00 00 80               	orl	$0x80000000, %eax       # imm = 0x80000000
    844f: 89 45 f4                     	movl	%eax, -0xc(%ebp)
;     _i686_out32(PCI_CONFIG_ADDRESS, address);
    8452: 8b 45 f4                     	movl	-0xc(%ebp), %eax
    8455: 89 44 24 04                  	movl	%eax, 0x4(%esp)
    8459: c7 04 24 f8 0c 00 00         	movl	$0xcf8, (%esp)          # imm = 0xCF8
    8460: e8 4e 01 00 00               	calll	0x85b3 <_i686_out32>
;     value = _i686_in32(PCI_CONFIG_DATA);
    8465: c7 04 24 fc 0c 00 00         	movl	$0xcfc, (%esp)          # imm = 0xCFC
    846c: e8 64 01 00 00               	calll	0x85d5 <_i686_in32>
    8471: 89 45 f0                     	movl	%eax, -0x10(%ebp)
;     return value;
    8474: 8b 45 f0                     	movl	-0x10(%ebp), %eax
; }
    8477: 8b 5d fc                     	movl	-0x4(%ebp), %ebx
    847a: 89 ec                        	movl	%ebp, %esp
    847c: 5d                           	popl	%ebp
    847d: c3                           	retl

0000847e <_pc_pci_cfg_write>:
; {
    847e: 55                           	pushl	%ebp
    847f: 89 e5                        	movl	%esp, %ebp
    8481: 83 ec 38                     	subl	$0x38, %esp
    8484: 89 5d fc                     	movl	%ebx, -0x4(%ebp)
    8487: 8b 45 08                     	movl	0x8(%ebp), %eax
    848a: 8b 5d 0c                     	movl	0xc(%ebp), %ebx
    848d: 8b 4d 10                     	movl	0x10(%ebp), %ecx
    8490: 8b 55 14                     	movl	0x14(%ebp), %edx
    8493: 88 45 e4                     	movb	%al, -0x1c(%ebp)
    8496: 88 d8                        	movb	%bl, %al
    8498: 88 45 e0                     	movb	%al, -0x20(%ebp)
    849b: 88 c8                        	movb	%cl, %al
    849d: 88 45 dc                     	movb	%al, -0x24(%ebp)
    84a0: 88 d0                        	movb	%dl, %al
    84a2: 88 45 d8                     	movb	%al, -0x28(%ebp)
;     uint32_t address = 0x80000000 | ((bus << 16) | (device << 11) | (function << 8) | offset);
    84a5: 0f b6 45 e4                  	movzbl	-0x1c(%ebp), %eax
    84a9: c1 e0 10                     	shll	$0x10, %eax
    84ac: 89 c2                        	movl	%eax, %edx
    84ae: 0f b6 45 e0                  	movzbl	-0x20(%ebp), %eax
    84b2: c1 e0 0b                     	shll	$0xb, %eax
    84b5: 09 c2                        	orl	%eax, %edx
    84b7: 0f b6 45 dc                  	movzbl	-0x24(%ebp), %eax
    84bb: c1 e0 08                     	shll	$0x8, %eax
    84be: 09 c2                        	orl	%eax, %edx
    84c0: 0f b6 45 d8                  	movzbl	-0x28(%ebp), %eax
    84c4: 09 d0                        	orl	%edx, %eax
    84c6: 0d 00 00 00 80               	orl	$0x80000000, %eax       # imm = 0x80000000
    84cb: 89 45 f4                     	movl	%eax, -0xc(%ebp)
;     _i686_out32(PCI_CONFIG_ADDRESS, address);
    84ce: 8b 45 f4                     	movl	-0xc(%ebp), %eax
    84d1: 89 44 24 04                  	movl	%eax, 0x4(%esp)
    84d5: c7 04 24 f8 0c 00 00         	movl	$0xcf8, (%esp)          # imm = 0xCF8
    84dc: e8 d2 00 00 00               	calll	0x85b3 <_i686_out32>
;     _i686_out32(PCI_CONFIG_DATA, value);
    84e1: 8b 45 18                     	movl	0x18(%ebp), %eax
    84e4: 89 44 24 04                  	movl	%eax, 0x4(%esp)
    84e8: c7 04 24 fc 0c 00 00         	movl	$0xcfc, (%esp)          # imm = 0xCFC
    84ef: e8 bf 00 00 00               	calll	0x85b3 <_i686_out32>
; }
    84f4: 90                           	nop
    84f5: 8b 5d fc                     	movl	-0x4(%ebp), %ebx
    84f8: 89 ec                        	movl	%ebp, %esp
    84fa: 5d                           	popl	%ebp
    84fb: c3                           	retl

000084fc <switch_real_to_prot>:
;     cli                                 # clear interrupt
    84fc: fa                           	cli
;     xor     %ax, %ax
    84fd: 31 c0                        	xorl	%eax, %eax
;     mov     %ax, %ds                    # clear ds
    84ff: 8e d8                        	movl	%eax, %ds
;     lgdt    gdtr                        # load gdt
    8501: 0f 01 16                     	lgdtl	(%esi)
    8504: 6e                           	outsb	(%esi), %dx
    8505: 86 0f                        	xchgb	%cl, (%edi)
;     mov     %cr0, %eax                  # get cr0
    8507: 20 c0                        	andb	%al, %al
;     or      $1, %eax                    # enable protected mode
    8509: 66 83 c8 01                  	orw	$0x1, %ax
;     mov     %eax, %cr0                  # set cr0
    850d: 0f 22 c0                     	movl	%eax, %cr0
;     jmp     $PROT_CODE_SEG, $.pmode     # switch code segment
    8510: ea 15 85 08 00 66 b8         	ljmpl	$-0x479a, $0x88515      # imm = 0xB866
                                                                        # imm = 0x88515

00008515 <.pmode>:
;     mov     $PROT_DATA_SEG, %ax
    8515: 66 b8 10 00                  	movw	$0x10, %ax
;     mov     %ax, %ds
    8519: 8e d8                        	movl	%eax, %ds
;     mov     %ax, %es
    851b: 8e c0                        	movl	%eax, %es
;     mov     %ax, %fs
    851d: 8e e0                        	movl	%eax, %fs
;     mov     %ax, %gs
    851f: 8e e8                        	movl	%eax, %gs
;     mov     %ax, %ss                    # set segments
    8521: 8e d0                        	movl	%eax, %ss
;     xor     %eax, %eax
    8523: 31 c0                        	xorl	%eax, %eax
;     mov     (%esp), %ax
    8525: 66 8b 04 24                  	movw	(%esp), %ax
;     mov     %ax, REAL_STACK_INIT        # save current return address
    8529: 66 a3 fc 7b 00 00            	movw	%ax, 0x7bfc
;     mov     prot_stack, %eax
    852f: a1 6a 86 00 00               	movl	0x866a, %eax
;     mov     %eax, %esp
    8534: 89 c4                        	movl	%eax, %esp
;     mov     %eax, %ebp                  # restore protected mode stack
    8536: 89 c5                        	movl	%eax, %ebp
;     xor     %eax, %eax
    8538: 31 c0                        	xorl	%eax, %eax
;     mov     REAL_STACK_INIT, %ax
    853a: 66 a1 fc 7b 00 00            	movw	0x7bfc, %ax
;     mov     %eax, (%esp)                # load current return address
    8540: 89 04 24                     	movl	%eax, (%esp)
;     xor     %eax, %eax                  # clear eax
    8543: 31 c0                        	xorl	%eax, %eax
;     ret
    8545: c3                           	retl

00008546 <switch_prot_to_real>:
;     cli                                 # clear interrupt
    8546: fa                           	cli
;     lgdt    gdtr                        # load gdt
    8547: 0f 01 15 6e 86 00 00         	lgdtl	0x866e
;     mov     %esp, %eax
    854e: 89 e0                        	movl	%esp, %eax
;     mov     %eax, prot_stack            # save stack
    8550: a3 6a 86 00 00               	movl	%eax, 0x866a
;     mov     (%esp), %eax
    8555: 8b 04 24                     	movl	(%esp), %eax
;     mov     %eax, REAL_STACK_INIT       # real mode stack is not preserved
    8558: a3 fc 7b 00 00               	movl	%eax, 0x7bfc
;     mov     $REAL_STACK_INIT, %eax
    855d: b8 fc 7b 00 00               	movl	$0x7bfc, %eax           # imm = 0x7BFC
;     mov     %eax, %esp
    8562: 89 c4                        	movl	%eax, %esp
;     mov     %eax, %ebp                  # set up stack pointer, base pointer
    8564: 89 c5                        	movl	%eax, %ebp
;     ljmp    $PROT16_CODE_SEG, $.pmode16 # switch to 16-bit protected mode
    8566: ea 6d 85 00 00 18 00         	ljmpl	$0x18, $0x856d          # imm = 0x856D

0000856d <.pmode16>:
;     mov     $PROT16_DATA_SEG, %ax
    856d: b8 20 00 8e d8               	movl	$0xd88e0020, %eax       # imm = 0xD88E0020
;     mov     %ax, %es
    8572: 8e c0                        	movl	%eax, %es
;     mov     %ax, %fs
    8574: 8e e0                        	movl	%eax, %fs
;     mov     %ax, %gs
    8576: 8e e8                        	movl	%eax, %gs
;     mov     %ax, %ss                    # set up segments
    8578: 8e d0                        	movl	%eax, %ss
;     mov     %cr0, %eax                  # get cr0
    857a: 0f 20 c0                     	movl	%cr0, %eax
;     and     $~1, %eax                   # disable protected mode
    857d: 66 83 e0 fe                  	andw	$-0x2, %ax
;     mov     %eax, %cr0                  # set cr0
    8581: 0f 22 c0                     	movl	%eax, %cr0
;     ljmp    $0, $.rmode                 # reload code segment
    8584: ea 89 85 00 00 66 31         	ljmpl	$0x3166, $0x8589        # imm = 0x3166
                                                                        # imm = 0x8589

00008589 <.rmode>:
;     xor     %eax, %eax
    8589: 66 31 c0                     	xorw	%ax, %ax
;     mov     %ax, %ds
    858c: 8e d8                        	movl	%eax, %ds
;     mov     %ax, %es
    858e: 8e c0                        	movl	%eax, %es
;     mov     %ax, %fs
    8590: 8e e0                        	movl	%eax, %fs
;     mov     %ax, %gs
    8592: 8e e8                        	movl	%eax, %gs
;     mov     %ax, %ss                    # set up segments
    8594: 8e d0                        	movl	%eax, %ss
;     ret
    8596: c3                           	retl

00008597 <_i686_out8>:
;     push    %ebp                        # set up stack base pointer
    8597: 55                           	pushl	%ebp
;     mov     %esp, %ebp
    8598: 89 e5                        	movl	%esp, %ebp
;     mov     8(%ebp), %al                # value
    859a: 8a 45 08                     	movb	0x8(%ebp), %al
;     mov     12(%ebp), %dx               # port
    859d: 66 8b 55 0c                  	movw	0xc(%ebp), %dx
;     outb    %al, %dx                    # do the output
    85a1: ee                           	outb	%al, %dx
;     pop     %ebp                        # restore base pointer
    85a2: 5d                           	popl	%ebp
;     ret
    85a3: c3                           	retl

000085a4 <_i686_out16>:
;     push    %ebp                        # set up stack base pointer 
    85a4: 55                           	pushl	%ebp
;     mov     %esp, %ebp
    85a5: 89 e5                        	movl	%esp, %ebp
;     mov     8(%ebp), %ax                # value
    85a7: 66 8b 45 08                  	movw	0x8(%ebp), %ax
;     mov     12(%ebp), %dx               # port
    85ab: 66 8b 55 0c                  	movw	0xc(%ebp), %dx
;     outw    %ax, %dx                    # do the output
    85af: 66 ef                        	outw	%ax, %dx
;     pop     %ebp                        # restore base pointer
    85b1: 5d                           	popl	%ebp
;     ret
    85b2: c3                           	retl

000085b3 <_i686_out32>:
;     push    %ebp                        # set up stack base pointer
    85b3: 55                           	pushl	%ebp
;     mov     %esp, %ebp
    85b4: 89 e5                        	movl	%esp, %ebp
;     mov     8(%ebp), %eax               # value
    85b6: 8b 45 08                     	movl	0x8(%ebp), %eax
;     mov     12(%ebp), %dx               # port
    85b9: 66 8b 55 0c                  	movw	0xc(%ebp), %dx
;     outl    %eax, %dx                   # do the output
    85bd: ef                           	outl	%eax, %dx
;     pop     %ebp                        # restore base pointer
    85be: 5d                           	popl	%ebp
;     ret
    85bf: c3                           	retl

000085c0 <_i686_in8>:
;     push    %ebp                        # set up stack base pointer
    85c0: 55                           	pushl	%ebp
;     mov     %esp, %ebp
    85c1: 89 e5                        	movl	%esp, %ebp
;     mov     8(%ebp), %dx                # port
    85c3: 66 8b 55 08                  	movw	0x8(%ebp), %dx
;     inb     %dx, %al                    # do the input
    85c7: ec                           	inb	%dx, %al
;     pop     %ebp                        # restore base pointer
    85c8: 5d                           	popl	%ebp
;     ret
    85c9: c3                           	retl

000085ca <_i686_in16>:
;     push    %ebp                        # set up stack base pointer
    85ca: 55                           	pushl	%ebp
;     mov     %esp, %ebp
    85cb: 89 e5                        	movl	%esp, %ebp
;     mov     8(%ebp), %dx                # port
    85cd: 66 8b 55 08                  	movw	0x8(%ebp), %dx
;     inw     %dx, %ax                    # do the input
    85d1: 66 ed                        	inw	%dx, %ax
;     pop     %ebp                        # restore base pointer
    85d3: 5d                           	popl	%ebp
;     ret
    85d4: c3                           	retl

000085d5 <_i686_in32>:
;     push    %ebp                        # set up stack base pointer
    85d5: 55                           	pushl	%ebp
;     mov     %esp, %ebp
    85d6: 89 e5                        	movl	%esp, %ebp
;     mov     8(%ebp), %dx                # port
    85d8: 66 8b 55 08                  	movw	0x8(%ebp), %dx
;     inl     %dx, %eax                   # do the input
    85dc: ed                           	inl	%dx, %eax
;     pop     %ebp                        # restore base pointer
    85dd: 5d                           	popl	%ebp
;     ret
    85de: c3                           	retl

000085df <_i686_idt_set_entry>:
; {
    85df: 55                           	pushl	%ebp
    85e0: 89 e5                        	movl	%esp, %ebp
    85e2: 83 ec 18                     	subl	$0x18, %esp
    85e5: 8b 45 10                     	movl	0x10(%ebp), %eax
    85e8: 8b 55 14                     	movl	0x14(%ebp), %edx
    85eb: 66 89 45 ec                  	movw	%ax, -0x14(%ebp)
    85ef: 89 d0                        	movl	%edx, %eax
    85f1: 66 89 45 e8                  	movw	%ax, -0x18(%ebp)
;     const uint32_t handler_offset = (uint32_t)handler;
    85f5: 8b 45 0c                     	movl	0xc(%ebp), %eax
    85f8: 89 45 fc                     	movl	%eax, -0x4(%ebp)
;     entry->offset_low = handler_offset & 0xFFFF;
    85fb: 8b 45 fc                     	movl	-0x4(%ebp), %eax
    85fe: 0f b7 d0                     	movzwl	%ax, %edx
    8601: 8b 45 08                     	movl	0x8(%ebp), %eax
    8604: 66 89 10                     	movw	%dx, (%eax)
;     entry->segment_selector = segment_selector;
    8607: 8b 45 08                     	movl	0x8(%ebp), %eax
    860a: 8b 55 ec                     	movl	-0x14(%ebp), %edx
    860d: 66 89 50 02                  	movw	%dx, 0x2(%eax)
;     entry->attributes = attributes;
    8611: 8b 45 08                     	movl	0x8(%ebp), %eax
    8614: 8b 55 e8                     	movl	-0x18(%ebp), %edx
    8617: 66 89 50 04                  	movw	%dx, 0x4(%eax)
;     entry->offset_middle = (handler_offset >> 16) & 0xFFFF;
    861b: 8b 45 fc                     	movl	-0x4(%ebp), %eax
    861e: c1 e8 10                     	shrl	$0x10, %eax
    8621: 0f b7 d0                     	movzwl	%ax, %edx
    8624: 8b 45 08                     	movl	0x8(%ebp), %eax
    8627: 66 89 50 06                  	movw	%dx, 0x6(%eax)
;     entry->offset_high = 0;
    862b: 8b 45 08                     	movl	0x8(%ebp), %eax
    862e: c7 40 08 00 00 00 00         	movl	$0x0, 0x8(%eax)
;     entry->reserved2 = 0;
    8635: 8b 45 08                     	movl	0x8(%ebp), %eax
    8638: c7 40 0c 00 00 00 00         	movl	$0x0, 0xc(%eax)
; }
    863f: 90                           	nop
    8640: 89 ec                        	movl	%ebp, %esp
    8642: 5d                           	popl	%ebp
    8643: c3                           	retl

00008644 <_i686_idt_load>:
;     push    %ebp                        # set up stack base pointer
    8644: 55                           	pushl	%ebp
;     mov     %esp, %ebp
    8645: 89 e5                        	movl	%esp, %ebp
;     push    %esi                        # push registers
    8647: 56                           	pushl	%esi
;     push    %edi
    8648: 57                           	pushl	%edi
;     mov     8(%ebp), %esi               # load IDT table address
    8649: 8b 75 08                     	movl	0x8(%ebp), %esi
;     mov     12(%ebp), %di               # load IDT table size
    864c: 66 8b 7d 0c                  	movw	0xc(%ebp), %di
;     dec     %di                         # decrease IDT table size by 1
    8650: 66 4f                        	decw	%di
;     xor     %eax, %eax                  # clear EAX
    8652: 31 c0                        	xorl	%eax, %eax
;     push    %eax
    8654: 50                           	pushl	%eax
;     push    %esi
    8655: 56                           	pushl	%esi
;     push    %di
    8656: 66 57                        	pushw	%di
;     lidt    (%esp)                      # load IDT
    8658: 0f 01 1c 24                  	lidtl	(%esp)
;     pop     %edi                        # pop registers
    865c: 5f                           	popl	%edi
;     pop     %esi
    865d: 5e                           	popl	%esi
;     pop     %ebp                        # restore base pointer
    865e: 5d                           	popl	%ebp
;     ret
    865f: c3                           	retl

00008660 <main>:
; {
    8660: 55                           	pushl	%ebp
    8661: 89 e5                        	movl	%esp, %ebp
; }
    8663: 90                           	nop
    8664: 5d                           	popl	%ebp
    8665: c3                           	retl
